% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PIConfiguration.R
\docType{class}
\name{PIConfiguration}
\alias{PIConfiguration}
\title{PIConfiguration}
\description{
An object storing configuration for the parameter identification
}
\section{Super class}{
\code{\link[ospsuite.utils:Printable]{ospsuite.utils::Printable}} -> \code{PIConfiguration}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{simulateSteadyState}}{Boolean representing whether the simulation
should be brought to a steady-state first}

\item{\code{steadyStateTime}}{Time in minutes to simulate if simulating steady-state. May be NULL}

\item{\code{printCallFeedback}}{Boolean. If \code{TRUE}, the output of the
residuals calculation will be printed after each iteration.
Default is \code{FALSE}}

\item{\code{simulationRunOptions}}{Object of type \code{SimulationRunOptions} that will be passed
to simulation runs. If \code{NULL}, default options are used.}

\item{\code{targetFunctionType}}{Type of the target function used for error
calculation. Supported target functions  are listed  in
\code{ospsuite.parameteridentification::ObjectiveFunctions}.}

\item{\code{algorithm}}{a string describing the optimization algorithm, as passed
to the \code{FME::modFit()} function.
Supported algorithms are listed  in
\code{ospsuite.parameteridentification::Algorithms}.}

\item{\code{algorithmOptions}}{a list of named parameters describing method-specific
control arguments, as passed to the \code{FME::modFit()} function.
Supported options are listed  in
\code{ospsuite.parameteridentification::AlgorithmOptions}.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PIConfiguration-new}{\code{PIConfiguration$new()}}
\item \href{#method-PIConfiguration-print}{\code{PIConfiguration$print()}}
\item \href{#method-PIConfiguration-clone}{\code{PIConfiguration$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PIConfiguration-new"></a>}}
\if{latex}{\out{\hypertarget{method-PIConfiguration-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new instance of the class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PIConfiguration$new()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A new \code{PIConfiguration} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PIConfiguration-print"></a>}}
\if{latex}{\out{\hypertarget{method-PIConfiguration-print}{}}}
\subsection{Method \code{print()}}{
Print the object to the console
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PIConfiguration$print(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Rest arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PIConfiguration-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PIConfiguration-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PIConfiguration$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
