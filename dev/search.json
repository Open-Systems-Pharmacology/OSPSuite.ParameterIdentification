[{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/confidence-intervals.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Confidence intervals","text":"ospsuite.parameteridentification package provides tools estimate model parameters fitting simulations observed data. optimization step, confidence intervals (CIs) can used assess uncertainty estimated parameters evaluate robust results . vignette describes available methods confidence interval estimation, explains configure run , shows inspect results.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/confidence-intervals.html","id":"choosing-a-ci-method","dir":"Articles","previous_headings":"","what":"Choosing a CI Method","title":"Confidence intervals","text":"hessian default method. estimates confidence intervals curvature objective function optimum. approach fast works well problem well-behaved objective function approximately quadratic. PL (profile likelihood) computes confidence intervals scanning likelihood along parameter. robust parameters near bounds situations likelihood well approximated quadratic shape, slower. bootstrap generates confidence intervals repeatedly resampling observed data re-fitting model. method robust makes minimal assumptions likelihood, computationally intensive methods. Resampling depends type observed data: individual datasets, new samples individuals drawn. aggregated datasets, resampling based Gaussian Process Regression (GPR). types data, mixed strategy applied. User-defined dataset weights respected resampling. Note: using bootstrap method, parameter estimate falls outside computed confidence interval, can occur highly skewed distributions, package automatically reports one-sided confidence interval. conflicting bound set NA, ciType field set \"one-sided\". bounds conflict, ciType set \"failed\". successfully estimated two-sided intervals, ciType \"two-sided\".","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/confidence-intervals.html","id":"advanced-configuration-options","dir":"Articles","previous_headings":"","what":"Advanced Configuration Options","title":"Confidence intervals","text":"confidence interval method provides predefined set default options. defaults available helper objects CIOptions_Hessian, CIOptions_PL, CIOptions_Bootstrap. corresponding object assigned piConfiguration$ciOptions individual fields can modified required.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/confidence-intervals.html","id":"explanation-of-options","dir":"Articles","previous_headings":"Advanced Configuration Options","what":"Explanation of options","title":"Confidence intervals","text":"Common options: - epsilon: numerical step size used approximations - confLevel: confidence level (e.g. 0.95 95% confidence intervals) Additional options profile likelihood (PL): - maxIter: maximum number iterations Additional options bootstrap: - nBootstrap: number bootstrap resamples - seed: random seed reproducibility method specified, default hessian method standard options.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/confidence-intervals.html","id":"minimal-configuration-example","dir":"Articles","previous_headings":"Advanced Configuration Options","what":"Minimal configuration example","title":"Confidence intervals","text":"Configuration confidence intervals done PIConfiguration object, also holds settings parameter identification. example shows Hessian method selected default options adjusted: default, confidence intervals estimated immediately optimization run (autoEstimateCI = TRUE). disable behaviour perform CI estimation later, set flag FALSE: case, optimization executed first CI estimation triggered explicitly needed, example review results running time-consuming CI calculation.","code":"piConfiguration <- PIConfiguration$new()  # select CI method piConfiguration$ciMethod <- \"hessian\"  # assign default options and adjust if necessary piConfiguration$ciOptions <- CIOptions_Hessian piConfiguration$ciOptions$confLevel <- 0.95 piConfiguration$autoEstimateCI <- FALSE piResult <- piTask$run() piResult <- piTask$estimateCI()"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/confidence-intervals.html","id":"reading-ci-results","dir":"Articles","previous_headings":"","what":"Reading CI results","title":"Confidence intervals","text":"printout PIResult object shows main outcomes parameter identification run, including parameter estimates, standard deviations, coefficients variation, confidence intervals (available). programmatic access, results PI run can exported either data frame list: list output also contains ciDetails entry method-specific information stored: hessian: Hessian matrix, covariance matrix, eigenvalues, correlation matrix PL: parameter history likelihood thresholds bootstrap: bootstrap replicates, empirical confidence bounds, seed used resampling","code":"df <- piResult$toDataFrame() # tidy table with estimates, sd, cv, lowerCI, upperCI, ciType, etc. lst <- piResult$toList() # full details including cost information and CI-specific details"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/confidence-intervals.html","id":"practical-tips","dir":"Articles","previous_headings":"","what":"Practical tips","title":"Confidence intervals","text":"Start hessian method default runs quickly. confidence intervals appear implausible (wide, asymmetric, NA), repeat analysis bootstrap. CI calculation fails, check parameter bounds, scaling (lin log), residual weighting. Poorly chosen settings areas often prevent reliable CI estimation. bootstrap, begin small number resamples (example 100–200) test setup, increase needed. Always set seed reproducible results required.","code":""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/data-mapping.html","id":"introduction-1","dir":"Articles","previous_headings":"","what":"Introduction","title":"Data mapping and weights","text":"vignette shows link simulation outputs observed data apply weights transformations parameter identification workflow. Mappings created PIOutputMapping class, connects simulation quantity one observed datasets. mapping can customized assigning dataset- point-specific weights applying transformations offsets scaling factors. adjustments help align observed simulated values control much influence dataset optimization.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/data-mapping.html","id":"creating-a-mapping","dir":"Articles","previous_headings":"","what":"Creating a mapping","title":"Data mapping and weights","text":"Mappings created PIOutputMapping class, connects simulation quantity (example plasma concentration) one observed datasets. quantity retrieved loaded simulation via getQuantity. following use Aciclovir example simulation: path corresponds quantity’s location simulation structure. point, outputMapping represents link chosen simulation output observed data added next. full description fields methods, see PIOutputMapping documentation.","code":"library(ospsuite.parameteridentification) #> Loading required package: ospsuite  # Load example simulation simulation <- loadSimulation(   system.file(\"extdata\", \"Aciclovir.pkml\", package = \"ospsuite\") )  # Retrieve a quantity by path from the simulation quantity <- getQuantity(   path = \"Organism|PeripheralVenousBlood|Aciclovir|Plasma (Peripheral Venous Blood)\",   container = simulation )  # Create a new mapping for this quantity outputMapping <- PIOutputMapping$new(quantity = quantity)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/data-mapping.html","id":"adding-observed-data","dir":"Articles","previous_headings":"","what":"Adding observed data","title":"Data mapping and weights","text":"Observed datasets can imported Excel attached mapping. Import settings (naming pattern) defined via importer configuration. background working observed data importing Excel, see Observed data article {ospsuite} documentation.","code":"filePath <- system.file(\"extdata\", \"Aciclovir_Profiles.xlsx\",                         package = \"ospsuite.parameteridentification\")  importConfig <- createImporterConfigurationForFile(filePath) importConfig$namingPattern <- \"{Source}.{Sheet}.{Dose}\"  obsData <- loadDataSetsFromExcel(   xlsFilePath = filePath,   importerConfigurationOrPath = importConfig,   importAllSheets = TRUE )  # Attach one or more datasets to the mapping (labels come from the naming pattern) outputMapping$addObservedDataSets(   data = obsData$`Aciclovir_Profiles.Vergin 1995.Iv.250 mg` )"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/data-mapping.html","id":"scaling","dir":"Articles","previous_headings":"","what":"Scaling","title":"Data mapping and weights","text":"Scaling specifies whether residuals calculated raw (linear) scale logarithmic scale. default linear (\"lin\"), logarithmic scaling (\"log\") can selected emphasize relative differences data span several orders magnitude.","code":"outputMapping$scaling <- \"log\""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/data-mapping.html","id":"setting-weights","dir":"Articles","previous_headings":"","what":"Setting weights","title":"Data mapping and weights","text":"Weights control relative influence observed data optimization. can supplied directly datasets added mapping, can set updated later setDataWeights(). cases, weights passed named list names must match dataset labels.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/data-mapping.html","id":"adding-weights-directly","dir":"Articles","previous_headings":"Setting weights","what":"Adding weights directly","title":"Data mapping and weights","text":"Weights can attached time adding datasets. allows entire datasets - -weighted one step. code illustrative executed .","code":"## Not run: example only exampleMapping$addObservedDataSets(   data = list(\"Study A\" = dsA, \"Study B\" = dsB),   weights = list(     \"Study A\" = 1.0,        \"Study B\" = 0.5       ) ) ## End(Not run)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/data-mapping.html","id":"example-with-one-dataset","dir":"Articles","previous_headings":"Setting weights","what":"Example with one dataset","title":"Data mapping and weights","text":"Aciclovir example one dataset mapped. vector weights used, one weight per data point: Printing PIOutputMapping object provides concise summary showing output path labels attached datasets, labels weights applied, selected scaling: assigned weights can also accessed directly via dataWeights field, useful validation:","code":"# number of observed points nPoints <- length(obsData$`Aciclovir_Profiles.Vergin 1995.Iv.250 mg`$yValues)  # give less weight to the first 3 points, full weight to the rest outputMapping$setDataWeights(   list(     \"Aciclovir_Profiles.Vergin 1995.Iv.250 mg\" =       c(rep(0.3, 3), rep(1.0, nPoints - 3))   ) ) print(outputMapping) #> <PIOutputMapping> #>   • Output path: Organism|PeripheralVenousBlood|Aciclovir|Plasma (Peripheral #>   Venous Blood) #>   • Observed data labels: Aciclovir_Profiles.Vergin 1995.Iv.250 mg #>   • Data weight labels: Aciclovir_Profiles.Vergin 1995.Iv.250 mg #>   • Scaling: log outputMapping$dataWeights #> $`Aciclovir_Profiles.Vergin 1995.Iv.250 mg` #>  [1] 0.3 0.3 0.3 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/data-mapping.html","id":"other-options","dir":"Articles","previous_headings":"Setting weights","what":"Other options","title":"Data mapping and weights","text":"Weights always applied level individual data points. Using single scalar dataset (example 0.5) just shorthand, internally assigns weight every point dataset. examples illustrate different ways weights can specified.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/data-mapping.html","id":"dataset-level-weights","dir":"Articles","previous_headings":"Setting weights > Other options","what":"Dataset-level weights","title":"Data mapping and weights","text":"scalar weight broadcast points dataset:","code":"## Not run: example only outputMapping$setDataWeights(   list(     \"StudyA\" = 1.0,  # full influence     \"StudyB\" = 0.5   # down-weight entire dataset   ) ) ## End(Not run)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/data-mapping.html","id":"point-level-weights","dir":"Articles","previous_headings":"Setting weights > Other options","what":"Point-level weights","title":"Data mapping and weights","text":"numeric vector length dataset’s y-values:","code":"## Not run: example only outputMapping$setDataWeights(list(   \"StudyB\" = c(0.25, 0.25, 0.25, rep(1.0, 7))  # lower weight on first 3 points ))"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/data-mapping.html","id":"combined-effects","dir":"Articles","previous_headings":"Setting weights > Other options","what":"Combined effects","title":"Data mapping and weights","text":"Dataset- point-level effects can combined multiplying passing setDataWeights():","code":"## Not run: example only baseWeight <- 0.6 pointWeights <- ifelse(seq_along(dataSetB$yValues) <= 3, 0.3, 1.0)  outputMapping$setDataWeights(list(   \"StudyB\" = baseWeight * pointWeights )) ## End(Not run)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/data-mapping.html","id":"transformations","dir":"Articles","previous_headings":"","what":"Transformations","title":"Data mapping and weights","text":"Observed data can adjusted transformations improve comparability corresponding simulation output. done per dataset globally datasets mapping. Transformations allow offsets scaling factors applied x- y-values, example account systematic shifts experiments align starting points across datasets.","code":"outputMapping$setDataTransformations(   labels   = \"Aciclovir_Profiles.Vergin 1995.Iv.250 mg\",   xOffsets = 0.5, yOffsets = 0,   xFactors = 1,   yFactors = 1 )  outputMapping$dataTransformations #> $xOffsets #>                                           #>                                      0.0  #> Aciclovir_Profiles.Vergin 1995.Iv.250 mg  #>                                      0.5  #>  #> $yOffsets #>                                           #>                                        0  #> Aciclovir_Profiles.Vergin 1995.Iv.250 mg  #>                                        0  #>  #> $xFactors #>                                           #>                                        1  #> Aciclovir_Profiles.Vergin 1995.Iv.250 mg  #>                                        1  #>  #> $yFactors #>                                           #>                                        1  #> Aciclovir_Profiles.Vergin 1995.Iv.250 mg  #>                                        1"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/data-mapping.html","id":"practical-tips","dir":"Articles","previous_headings":"","what":"Practical tips","title":"Data mapping and weights","text":"Use scalar dataset weights coarse emphasis -weighting assays. Use point-level vectors emphasize time window de-emphasize outliers. Prefer log scaling values span orders magnitude. weighting errors occur, first check label names vector lengths.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/error-calculation.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Error calculation","text":"parameter identification (PI) process, measuring discrepancy simulated results observed data crucial. ospsuite.parameteridentification package offers two primary error models quantify difference: least squares error (lsq) M3 method (m3) handling data quantification limit (BQL).","code":""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/error-calculation.html","id":"lsq---least-squares-error","dir":"Articles","previous_headings":"Error Models","what":"LSQ - Least Squares Error","title":"Error calculation","text":"lsq method traditional approach minimizes sum squared differences observed simulated values. method widely used pharmacokinetic modeling, offering straightforward intuitive error calculation. default, selecting method transform BQL data replacing LLOQ/2.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/error-calculation.html","id":"m3---extended-least-squares-error","dir":"Articles","previous_headings":"Error Models","what":"M3 - Extended Least Squares Error","title":"Error calculation","text":"m3 method extends least squares error incorporating likelihood observed data quantification limit. method treats BQL data censored, applying maximum likelihood estimation include data model fit, thus offering accurate statistically robust approach handling BQL observations.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/error-calculation.html","id":"configuring-error-models-in-pi","dir":"Articles","previous_headings":"Error Models","what":"Configuring Error Models in PI","title":"Error calculation","text":"apply error model, set targetFunctionType attribute objectFunctionOptions PIConfiguration object: error calculation simulated results observer datasets within PIOutputMapping directly affects optimization process, aggregating errors across mappings.","code":"piConfiguration <- PIConfiguration$new() piConfiguration$objectiveFunctionOptions$objectiveFunctionType <- \"lsq\" # or \"m3\""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/error-calculation.html","id":"residual-weighting","dir":"Articles","previous_headings":"Advanced Error Model Customization","what":"Residual Weighting","title":"Error calculation","text":"PIConfiguration offers customization error calculation residualWeightingMethod. option specifies residuals weighted. methods advantageous observed data comes diverse populations, datasets comprise different observation counts, error dependent variable measured. Available options include: none: (default): residual weighting. std: Useful variability observed data points high, normalizes residuals standard deviation, mitigating impact outliers. mean: Beneficial datasets significant differences observation magnitudes, scaling residuals mean ensure equal contribution across data points. error: Requires yErrorValues yErrorType provided observed data DataSet. Ideal individual data points come variance estimates, allowing weighting inverse variances. yErrorType must supported OSP Suite error type: ArithmeticStdDev GeometricStdDev. apply residual weighting, set residualWeightingMethod attribute objectFunctionOptions PIConfiguration object:","code":"piConfiguration$objectiveFunctionOptions$residualWeightingMethod <- \"std\" # or \"mean\" or \"error\""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/error-calculation.html","id":"robust-residual-calculation","dir":"Articles","previous_headings":"Advanced Error Model Customization","what":"Robust Residual Calculation","title":"Error calculation","text":"enhanced flexibility handling outliers, ´PIConfiguration´ allows specifying robust method residual adjustment. Implementing robustMethod residuals directly addresses outlier influence, refining model robustness ensuring reliable parameter identification outcomes. Available options include: none (default): robust adjustments, treating residuals equally. huber: Minimizes impact outliers combining squared absolute values, making less sensitive extreme deviations. bisquare: reduces influence outliers applying weighting scheme diminishes role residuals move away median. apply robust residual calculation, set robustMethod attribute objectFunctionOptions PIConfiguration object:","code":"piConfiguration$objectiveFunctionOptions$robustMethod <- \"huber\" # or \"bisquare\""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/error-calculation.html","id":"scaling-impact","dir":"Articles","previous_headings":"Advanced Error Model Customization","what":"Scaling Impact","title":"Error calculation","text":"PIOutputMapping$scaling attribute, adjustable log lin, crucially shapes error model’s effectiveness residual calculations. Logarithmic scaling particularly advantageous datasets broad ranges, ensuring proportionate errors uniform residuals, thereby reducing skewness error distribution enhancing model convergence stability. change default ´linscaling, set thescalingattribute inPIOutputMapping`:","code":"outputMapping <- PIOutputMapping$new(quantity = testQuantity) outputMapping$scaling <- \"log\""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/error-calculation.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Error calculation","text":"Beal SL. (2001). Ways fit PK model data quantification limit. Journal Pharmacokinetics Pharmacodynamics, 28(5), 481-504. DOI: 10.1023/:1012299115260. Fox, J. & Weisberg, S. (2013). Robust Regression. College Liberal Arts - Statistics, Minneapolis.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/optimization-algorithms.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Optimization algorithms","text":"ospsuite.parameteridentification package incorporates selection optimization algorithms model parameter estimation. utilizing algorithms third-party R packages, offers solution optimize parameter values effectively. guide, explore distinct algorithms included, detail adjustable options, provide recommendations selecting suitable algorithm various optimization challenges.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/optimization-algorithms.html","id":"choosing-an-algorithm","dir":"Articles","previous_headings":"","what":"Choosing an Algorithm","title":"Optimization algorithms","text":"BOBYQA default algorithm due computational efficiency handling typical optimization tasks relatively small number parameters smooth objective functions. HJKB considered problems discontinuous objective functions derivative information problematic. DEoptim best suited highly complex problems, especially many local minima requiring global optimization strategies. Selecting appropriate algorithm depends nature optimization problem characteristics objective function. Experimenting different algorithms varying settings can provide insights effective approach specific task.","code":""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/optimization-algorithms.html","id":"bobyqa-from-nloptr-package","dir":"Articles","previous_headings":"Advanced Configuration Options","what":"BOBYQA from nloptr package","title":"Optimization algorithms","text":"BOBYQA (Bound Optimization Quadratic Approximation) performs derivative-free bound-constrained optimization using iteratively constructed quadratic approximation objective function (Powell, 2009). Default Options: stopval = -Inf: Stops minimization process objective function reaches value. xtol_rel = 1e-6: Terminates optimization relative size optimization step less value. maxeval = 1000: Limits number function evaluations value, optimization process stops. ftol_rel = 0.0: Stops optimization relative change objective function value iterations smaller value. ftol_abs = 0.0: Ends optimization process absolute change objective function value iterations falls threshold. check_derivatives = FALSE: TRUE, derivatives objective function (provided) checked correctness. Example usage: detailed documentation BOBYQA implementation, refer nloptr package documentation CRAN.","code":"piConfiguration <- PIConfiguration$new() piConfiguration$algorithm <- \"BOBYQA\" piConfiguration$algorithmOptions <- list(   stopval = -1e-06 )"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/optimization-algorithms.html","id":"hjkb-from-dfoptim-package","dir":"Articles","previous_headings":"Advanced Configuration Options","what":"HJKB from dfoptim package","title":"Optimization algorithms","text":"Hooke-Jeeves algorithm, encapsulated HJKB method, derivative-free optimization technique systematically explores search space using pattern trial points find minimum function (Kelley, 2009). Default Options: tol = 1e-06: Terminates optimization relative size optimization step smaller value, indicating convergence. maxfeval = Inf: Specifies maximum number objective function evaluations allowed halting optimization, offering boundless evaluation scope default. maximize = FALSE: Determines optimization direction; set FALSE minimize objective function, aligning common optimization tasks. target = Inf: Sets stopping criterion based achieving objective function value; optimization halts target exceeded, providing theoretical bound practical scenarios. info = FALSE: Controls verbosity optimization process; set FALSE suppress intermediate status information, maintaining cleaner output. Example usage: detailed documentation HJKB implementation, refer dfoptim package documentation CRAN.","code":"piConfiguration <- PIConfiguration$new() piConfiguration$algorithm <- \"HJKB\" piConfiguration$algorithmOptions <- list(   tol = 1e-09,   maxfeval = 1000 )"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/optimization-algorithms.html","id":"deoptim-from-deoptim-package","dir":"Articles","previous_headings":"Advanced Configuration Options","what":"DEoptim from DEoptim package","title":"Optimization algorithms","text":"DEoptim utilizes Differential Evolution (DE) algorithm, robust global stochastic optimization real-valued function real-valued parameter vector (Mullen et al., 2011) Default Options: VTR = -Inf: Specifies value reach termination. Optimization stops function value best parameter vector less equal threshold itermax reached. strategy = 2: Determines DE strategy employed optimization process, various strategies available influence new solutions generated. NP = NA: population size. larger population may improve search increases computational cost. itermax = 200: maximum number generations optimization halts, ensuring process concludes even complex search spaces. CR = 0.5: crossover probability, dictating likelihood offspring inheriting traits different parents, influencing diversity population. F = 0.8: differential weight factor, affecting variation generations convergence rate. bs = FALSE: Toggles standard selection (FALSE) “best parent offspring” selection (TRUE), affecting survival criteria. trace = TRUE: Enables printing algorithm progress status information, offering insights optimization process. Example usage: detailed documentation DEoptim implementation, refer DEoptim package documentation CRAN.","code":"piConfiguration <- PIConfiguration$new() piConfiguration$algorithm <- \"DEoptim\" piConfiguration$algorithmOptions <- list(   VTR = -1e-06,   strategy = 4 )"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/optimization-algorithms.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Optimization algorithms","text":"Powell MJD. (2009). BOBYQA algorithm bound constrained optimization without derivatives. Cambridge NA Report NA2009/06, University Cambridge, Cambridge. Kelley CT. (2009). Iterative Methods Optimization. Frontiers Applied Mathematics. https://doi.org/10.1137/1.9781611970920 Mullen KM, Ardia D, Gil D, Windover D, Cline J. (2011). DEoptim: R Package Global Optimization Differential Evolution. Journal Statistical Software, 40(6), 1-26. DOI: 10.18637/jss.v040.i06.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/user-guide.html","id":"parameter-estimation-problems","dir":"Articles","previous_headings":"","what":"Parameter estimation problems","title":"User guide","text":"Biosimulation models include numerical parameters determine outputs model. Often, values parameters known advance identified matching possible model outputs observed data. Finding parameter values best match observed data called parameter identification. ospsuite.parameteridentification package provides workflow setting tasks based existing PKML models, mapping model outputs observed data, estimating parameters. , three models increasing complexity used demonstrate functionality package.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/user-guide.html","id":"pi-workflow","dir":"Articles","previous_headings":"","what":"PI workflow","title":"User guide","text":"overall workflow similar running parameter identification (PI) PK-Sim MoBi, see corresponding documentation chapter. set PI task, user define: set simulations can use multiple simulations one optimization task. example, can identify value parameter (e.g., lipophilicity compound) using data different dosings. Definition parameters identified Mapping model outputs observed data Configuration optimization task, including selection algorithm algorithm options.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/user-guide.html","id":"simulations","dir":"Articles","previous_headings":"PI workflow","what":"Simulations","title":"User guide","text":"set Simulation objects. See documentation {ospsuite-r} load adjust simulations. example, load two instances Aciclovir PBPK model provided {ospsuite-r} package. want optimize lipophilicity renal clearance using plasma concentration data gathered 10-minute intravenous infusion aciclovir doses 250 mg 500 mg. Lipophilicity considered scenario-independent parameter, .e., value applied simulations. renal clearance, can assume inter-individual variability optimize value parameter separately dose group. start loading simulation *.pkml file twice. dose simulation set 250 mg. Remember Simulation objects created loading *.pkml file, represent two independent instances simulation. next step, retrieve objects application dose parameters change dose second simulation 500 mg.","code":"library(ospsuite.parameteridentification)  sim_250mg <- loadSimulation(system.file(\"extdata\", \"Aciclovir.pkml\", package = \"ospsuite\")) sim_500mg <- loadSimulation(system.file(\"extdata\", \"Aciclovir.pkml\", package = \"ospsuite\")) # Path to the dose parameter doseParameterPath <- \"Applications|IV 250mg 10min|Application_1|ProtocolSchemaItem|Dose\" # Get the parameter from the first simulation  # Get the instances of the parameters sim_250mg_doseParam <- getParameter(path = doseParameterPath, container = sim_250mg) print(sim_250mg_doseParam) #> <Parameter> #>   • Quantity Type: Parameter #>   • Path: Applications|IV 250mg 10min|Application_1|ProtocolSchemaItem|Dose #>   • Value: 2.50e-04 [kg] #>  #> ── Formula ── #>  #>   • isConstant: TRUE sim_500mg_doseParam <- getParameter(path = doseParameterPath, container = sim_500mg)  # Chage the value to 500 mg setParameterValues(parameters = sim_500mg_doseParam, values = 500, units = \"mg\") print(sim_500mg_doseParam) #> <Parameter> #>   • Quantity Type: Parameter #>   • Path: Applications|IV 250mg 10min|Application_1|ProtocolSchemaItem|Dose #>   • Value: 5.00e-04 [kg] #>  #> ── Formula ── #>  #>   • isConstant: TRUE"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/user-guide.html","id":"definition-of-parameters-to-be-identified","dir":"Articles","previous_headings":"PI workflow","what":"Definition of parameters to be identified","title":"User guide","text":"Specification parameters identified done creating objects class PIParameters. PIParameter describes single model parameter group parameters optimized together, .e., model parameters grouped PIParameters object value optimization. PIParameter also defines optimization’s start minimal maximal values. multiple model parameters linked one PIParameters instance, can belong different simulations come simulation. , example, two simulations two individuals compound, may one identification parameter, lipophilicity, linked lipophilicity parameters two simulations. time, can define two identification parameters individual reference concentrations specific enzyme. Consider example . create three PIParameters objects - one lipophilicity aciclovir, parameters two simulations linked together, two PIParameters renal clearance, considered independent. PIParameter following properties: $value: Current value parameter. Corresponds value Parameter object used PIParameters. multiple parameters linked together, value first parameter added used. $startValue: Start value parameter(s) used identification. default, value first added parameter. Can changed. $minValue: Minimal allowed value. default, 0.1-fold start value. Can changed. $maxValue: Maximal allowed value. default, 10-fold start value. Can changed. $unit: Unit start, min, max values. WARNING: changing unit update values! E.g., default start, min, max values renal clearance parameter given 1/min: Setting unit 1/h cause identification start 0.94 1/h, current value still 0.94 1/h 0.94 1/h * 60 min = 56.47 1/h: set boundaries lipophilicity [-10, 10], renal clearance [0, 10] 1/min:","code":"# Creating a PIParameters object with two simulation parameters retrieved from different simulations piParameterLipo <- PIParameters$new(parameters = list(   getParameter(path = \"Aciclovir|Lipophilicity\", container = sim_250mg),   getParameter(path = \"Aciclovir|Lipophilicity\", container = sim_500mg) ))  # Creating two separate PIParameters for the renal clearance piParameterCl_250mg <- PIParameters$new(parameters = getParameter(path = \"Neighborhoods|Kidney_pls_Kidney_ur|Aciclovir|Renal Clearances-TS|TSspec\", container = sim_250mg)) piParameterCl_500mg <- PIParameters$new(parameters = getParameter(path = \"Neighborhoods|Kidney_pls_Kidney_ur|Aciclovir|Renal Clearances-TS|TSspec\", container = sim_500mg)) print(piParameterCl_250mg) #> <PIParameters> #>   • Number of parameters: 1 #>   • Value: 0.9412 #>   • Start value: 0.9412 #>   • Min value: 0.09412 #>   • Max value: 9.412 #>   • Unit: 1/min piParameterCl_250mg$unit <- ospUnits$`Inversed time`$`1/h` print(piParameterCl_250mg) #> <PIParameters> #>   • Number of parameters: 1 #>   • Value: 56.47 #>   • Start value: 0.9412 #>   • Min value: 0.09412 #>   • Max value: 9.412 #>   • Unit: 1/h piParameterLipo$minValue <- -10 piParameterLipo$maxValue <- 10  piParameterCl_250mg$minValue <- 0 piParameterCl_250mg$maxValue <- 10 piParameterCl_250mg$unit <- ospUnits$`Inversed time`$`1/min`  piParameterCl_500mg$minValue <- 0 piParameterCl_500mg$maxValue <- 10 piParameterCl_500mg$unit <- ospUnits$`Inversed time`$`1/min`  print(piParameterLipo) #> <PIParameters> #>   • Number of parameters: 2 #>   • Value: -0.097 #>   • Start value: -0.097 #>   • Min value: -10 #>   • Max value: 10 #>   • Unit: Log Units print(piParameterCl_250mg) #> <PIParameters> #>   • Number of parameters: 1 #>   • Value: 0.9412 #>   • Start value: 0.9412 #>   • Min value: 0 #>   • Max value: 10 #>   • Unit: 1/min print(piParameterCl_500mg) #> <PIParameters> #>   • Number of parameters: 1 #>   • Value: 0.9412 #>   • Start value: 0.9412 #>   • Min value: 0 #>   • Max value: 10 #>   • Unit: 1/min"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/user-guide.html","id":"mapping-of-model-output-to-observed-data","dir":"Articles","previous_headings":"PI workflow","what":"Mapping of model output to observed data","title":"User guide","text":"order calculate error model, simulation outputs must linked observed data. One simulation output can linked multiple observed data sets framework. error calculated pair simulated output linked data set added total error. mapping done creating object class PIOutputMapping. object links single Quantity simulation multiple DataSet objects. first step, load two observed data sets Excel file provided package. Read article Observed data ospsuite documentation details. data sets hold concentration data aciclovir venous blood; corresponding simulation output path: create two objects PIOutputMapping class, one dose group: link simulation results corresponding observed data: scaling output mapping defines residuals simulated observed data calculated. details, see article error-functions. concentration data, change scaling logarithmic: data sets (simulated results observed data) within PIOutputMapping can transformed applying offsets scaling factors following logic implemented DataCombined class.","code":"filePath <- system.file(\"extdata\", \"Aciclovir_Profiles.xlsx\", package = \"ospsuite.parameteridentification\")  # Create importer configuration for the file importConfig <- createImporterConfigurationForFile(filePath = filePath) # Set naming patter importConfig$namingPattern <- \"{Source}.{Sheet}.{Dose}\" # Import data sets obsData <- loadDataSetsFromExcel(xlsFilePath = filePath, importerConfigurationOrPath = importConfig, importAllSheets = TRUE)  print(names(obsData)) #> [1] \"Aciclovir_Profiles.Vergin 1995.Iv.250 mg\" #> [2] \"Aciclovir_Profiles.Vergin 1995.Iv.500 mg\" simOutputPath <- \"Organism|PeripheralVenousBlood|Aciclovir|Plasma (Peripheral Venous Blood)\" outputMapping_250mg <- PIOutputMapping$new(quantity = getQuantity(path = simOutputPath, container = sim_250mg))  outputMapping_500mg <- PIOutputMapping$new(quantity = getQuantity(path = simOutputPath, container = sim_500mg)) outputMapping_250mg$addObservedDataSets(obsData$`Aciclovir_Profiles.Vergin 1995.Iv.250 mg`) outputMapping_500mg$addObservedDataSets(obsData$`Aciclovir_Profiles.Vergin 1995.Iv.500 mg`)  print(outputMapping_250mg) #> <PIOutputMapping> #>   • Output path: Organism|PeripheralVenousBlood|Aciclovir|Plasma (Peripheral #>   Venous Blood) #>   • Observed data labels: Aciclovir_Profiles.Vergin 1995.Iv.250 mg #>   • Data weight labels: NULL #>   • Scaling: lin outputMapping_250mg$scaling <- \"log\" outputMapping_500mg$scaling <- \"log\""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/user-guide.html","id":"configuration","dir":"Articles","previous_headings":"PI workflow","what":"Configuration","title":"User guide","text":"configuration PI includes selection algorithm, setting algorithm settings, options. PI configuration defined PIConfiguration object can re-used multiple PI tasks. user-defined configuration provided PI task, default one created following properties: printEvaluationFeedback (logical) indicates objective function value printed iteration simulationRunOptions: Object type SimulationRunOptions passed simulation runs. NULL, default options used. targetFunctionType (possible values listed ospsuite.parameteridentification::ObjectiveFunctionOptions) indicates objective function used calculate difference observed data simulated curve. See article vignette(\"error-calculation\") information. algorithm (possible values: HJKB, BOBYQA, DEoptim) indicates optimization algorithms used. Algorithm options can specified list passed piConfiguration$algorithmOptions. Supported algorithms options described vignette(\"optimization-algorithms\"). default settings listed AlgorithmOptions_XYZ, XYZ algorithm’s name. example, default settings BOBYQA algorithm stored AlgorithmOptions_BOBYQA: E.g. set maximal number function evaluations 1500 BOBYQA algorithm, can use following code:","code":"piConfiguration <- PIConfiguration$new() print(piConfiguration) #> <PIConfiguration> #>   • Optimization algorithm: BOBYQA #>   • Confidence interval method: hessian #>   • Objective function type: lsq #>   • Residual weighting method: none #>   • Robust residual calculation method: none #>   • Print feedback after each function evaluation: FALSE print(AlgorithmOptions_BOBYQA) #> $stopval #> [1] -Inf #>  #> $xtol_rel #> [1] 1e-06 #>  #> $maxeval #> [1] 1000 #>  #> $ftol_rel #> [1] 0 #>  #> $ftol_abs #> [1] 0 #>  #> $check_derivatives #> [1] FALSE algOptions <- AlgorithmOptions_BOBYQA algOptions$maxFunctionEvaluations <- 1500 piConfiguration$algorithmOptions <- algOptions"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/user-guide.html","id":"running-a-parameter-identification-task","dir":"Articles","previous_headings":"PI workflow","what":"Running a parameter identification task","title":"User guide","text":"simulation, identification parameters, mappings observed simulated data, configuration defined, used instance ParameterIdentification class: first can create time profiles comparing simulation results observed data current parameter values. separate time profile created PIOutputMapping.   NOTE: figures created current values parameters, start values! can now run PI print results: piResult R6 object encapsulates optimization output (, configured, confidence intervals) provides helper methods like $toDataFrame() $toList() exporting results.","code":"piTask <- ParameterIdentification$new(   simulations = list(sim_250mg, sim_500mg),   parameters = list(piParameterLipo, piParameterCl_250mg, piParameterCl_500mg),   outputMappings = list(outputMapping_250mg, outputMapping_500mg),   configuration = piConfiguration ) piTask$plotResults() #> [[1]] #>  #> [[2]] piResult <- piTask$run() print(piResult) #> <PIResult> #> Optimization Summary: #>   • Algorithm: BOBYQA #>   • CI Method: hessian #>   • Convergence: TRUE #>   • Objective value: 6.536 #>   • Iterations: 109 #>   • Function evaluations: 109 #>   • Elapsed (optimization): 27.14 s #>   • Elapsed (CI): 12.22 s #> Parameter Estimates: #>   • Lipophilicity: Estimate = -1.282, SD = 0.1090, CV = 0.08505, CI = [-1.495, #>   -1.068] #>   • TSspec: Estimate = 0.8353, SD = 0.1651, CV = 0.1977, CI = [0.5116, 1.159] #>   • TSspec: Estimate = 0.7572, SD = 0.1513, CV = 0.1999, CI = [0.4605, 1.054]"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/user-guide.html","id":"export-the-results","dir":"Articles","previous_headings":"PI workflow","what":"Export the results","title":"User guide","text":"Use $toDataFrame() get tidy table parameter estimates related fields: Use $toList() export full details, including diagnostics, cost metrics, residuals.costDetails includes items SSR, residuals, errorWeights, userWeights, yObserved, ySimulated:","code":"piResult$toDataFrame() #>   group          name #> 1     1 Lipophilicity #> 2     2        TSspec #> 3     3        TSspec #>                                                                                     path #> 1                                                 Vergin 1995 IV|Aciclovir|Lipophilicity #> 2 Vergin 1995 IV|Neighborhoods|Kidney_pls_Kidney_ur|Aciclovir|Renal Clearances-TS|TSspec #> 3 Vergin 1995 IV|Neighborhoods|Kidney_pls_Kidney_ur|Aciclovir|Renal Clearances-TS|TSspec #>        unit   estimate        sd         cv    lowerCI   upperCI ciType #> 1 Log Units -1.2816387 0.1090013 0.08504839 -1.4952774 -1.068000   <NA> #> 2     1/min  0.8352532 0.1651480 0.19772213  0.5115690  1.158937   <NA> #> 3     1/min  0.7571563 0.1513412 0.19988100  0.4605331  1.053780   <NA> #>   initialValue #> 1    -0.097000 #> 2     0.941241 #> 3     0.941241 names(piResult$toList()) #>  [1] \"finalParameters\"   \"objectiveValue\"    \"initialParameters\" #>  [4] \"convergence\"       \"algorithm\"         \"elapsed\"           #>  [7] \"iterations\"        \"fnEvaluations\"     \"ciMethod\"          #> [10] \"ciElapsed\"         \"ciError\"           \"ciDetails\"         #> [13] \"sd\"                \"cv\"                \"lowerCI\"           #> [16] \"upperCI\"           \"ciType\"            \"paramNames\"        #> [19] \"costDetails\""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/user-guide.html","id":"diagnostics","dir":"Articles","previous_headings":"PI workflow","what":"Diagnostics","title":"User guide","text":"assess goodness fit, plot time profiles optimization:   quality fit can assessed following criteria: individual time profile close observed data points. predicted-vs-observed plot close diagonal. residuals randomly distributed zero. residuals zero indicate overprediction underprediction. Another set parameters likely result better fit.","code":"piTask$plotResults() #> [[1]] #>  #> [[2]]"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Open Systems Pharmacology. Copyright holder. ESQlabs. Funder. Pavel Balazki. Author, maintainer. Rudi cre Engelke. Author. Sergei Vavilov. Author. Felix Mil. Contributor.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Balazki P, Engelke Rc, Vavilov S (2025). ospsuite.parameteridentification: Open Systems Pharmacology Parameter Identification package. R package version 2.1.0.9002, https://github.com/Open-Systems-Pharmacology/OSPSuite.ParameterIdentification.","code":"@Manual{,   title = {ospsuite.parameteridentification: Open Systems Pharmacology Parameter Identification package},   author = {Pavel Balazki and Rudi cre Engelke and Sergei Vavilov},   year = {2025},   note = {R package version 2.1.0.9002},   url = {https://github.com/Open-Systems-Pharmacology/OSPSuite.ParameterIdentification}, }"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/index.html","id":"ospsuiteparameteridentification","dir":"","previous_headings":"","what":"Open Systems Pharmacology Parameter Identification package","title":"Open Systems Pharmacology Parameter Identification package","text":"ospsuite.parameteridentification R package provides functionality performing parameter identification (.e., fitting model observed data) simulations created Open Systems Pharmacology Software tools PK-Sim MoBi. package requires ospsuite package run simulations.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Open Systems Pharmacology Parameter Identification package","text":"package can installed GitHub using pak package. Simply run following code: Get latest development version :","code":"install.packages(\"pak\")  pak::pak(\"Open-Systems-Pharmacology/OSPSuite.ParameterIdentification@*release\") pak::pak(\"Open-Systems-Pharmacology/OSPSuite.ParameterIdentification\")"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/index.html","id":"user-guide","dir":"","previous_headings":"","what":"User guide","title":"Open Systems Pharmacology Parameter Identification package","text":"Examples running parameter estimation tasks using package detailed vignette('user-guide').","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Open Systems Pharmacology Parameter Identification package","text":"Everyone interacting Open Systems Pharmacology community (codebases, issue trackers, chat rooms, mailing lists etc…) expected follow Open Systems Pharmacology code conduct.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/index.html","id":"contribution","dir":"","previous_headings":"","what":"Contribution","title":"Open Systems Pharmacology Parameter Identification package","text":"encourage contribution Open Systems Pharmacology community. getting started please read contribution guidelines. contributing code, please familiar coding standards.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Open Systems Pharmacology Parameter Identification package","text":"{OSPSuite.ParameterIdentification} package released GPLv2 License. trademarks within document belong legitimate owners.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/AlgorithmOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Algorithm Options for Optimization Algorithms — AlgorithmOptions","title":"Algorithm Options for Optimization Algorithms — AlgorithmOptions","text":"Default options various optimization algorithms used within package. algorithms configured via PIConfiguration class.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/AlgorithmOptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Algorithm Options for Optimization Algorithms — AlgorithmOptions","text":"","code":"AlgorithmOptions_HJKB  AlgorithmOptions_BOBYQA  AlgorithmOptions_DEoptim"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/AlgorithmOptions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Algorithm Options for Optimization Algorithms — AlgorithmOptions","text":"object class list length 5. object class list length 6. object class list length 21.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/AlgorithmOptions.html","id":"algorithmoptions-hjkb","dir":"Reference","previous_headings":"","what":"AlgorithmOptions_HJKB","title":"Algorithm Options for Optimization Algorithms — AlgorithmOptions","text":"Default options HJKB algorithm. See dfoptim::hjkb() details options.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/AlgorithmOptions.html","id":"algorithmoptions-bobyqa","dir":"Reference","previous_headings":"","what":"AlgorithmOptions_BOBYQA","title":"Algorithm Options for Optimization Algorithms — AlgorithmOptions","text":"Default options BOBYQA algorithm. See nloptr::nl.opts() details options.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/AlgorithmOptions.html","id":"algorithmoptions-deoptim","dir":"Reference","previous_headings":"","what":"AlgorithmOptions_DEoptim","title":"Algorithm Options for Optimization Algorithms — AlgorithmOptions","text":"Default options DEoptim algorithm. See DEoptim::DEoptim.control() details options.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/Algorithms.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimization Algorithms — Algorithms","title":"Optimization Algorithms — Algorithms","text":"Optimization algorithms supported optimization routines, available use ParameterIdentification class. algorithms configured via PIConfiguration class.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/Algorithms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization Algorithms — Algorithms","text":"","code":"Algorithms"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/Algorithms.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Optimization Algorithms — Algorithms","text":"object class list length 3.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/Algorithms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Optimization Algorithms — Algorithms","text":"Supported algorithms include: HJKB – Hooke-Jeeves algorithm dfoptim package. BOBYQA – BOBYQA algorithm nloptr package. DEoptim – Differential evolution algorithm DEoptim package, suitable stochastic global optimization. algorithms can specified configured within PIConfiguration class tailor parameter identification process specific needs.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/CIMethods.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval Estimation Methods — CIMethods","title":"Confidence Interval Estimation Methods — CIMethods","text":"Confidence interval estimation methods supported ParameterIdentification class. methods configured via PIConfiguration class.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/CIMethods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval Estimation Methods — CIMethods","text":"","code":"CIMethods"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/CIMethods.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Confidence Interval Estimation Methods — CIMethods","text":"object class list length 3.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/CIMethods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence Interval Estimation Methods — CIMethods","text":"Supported methods: hessian - Hessian-based approximation using Fisher Information Matrix. PL – Profile likelihood estimation, iterating parameter. bootstrap – Bootstrap resampling estimate parameter uncertainty. methods can specified configured within PIConfiguration class customize confidence interval estimation.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/CIOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval Estimation Options — CIOptions","title":"Confidence Interval Estimation Options — CIOptions","text":"Default options various confidence interval estimation methods used within package. methods configured via PIConfiguration class.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/CIOptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval Estimation Options — CIOptions","text":"","code":"CIOptions_Hessian  CIOptions_PL  CIOptions_Bootstrap"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/CIOptions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Confidence Interval Estimation Options — CIOptions","text":"list containing default settings confidence interval estimation methods. object class list length 3. object class list length 3.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/CIOptions.html","id":"cioptions-hessian","dir":"Reference","previous_headings":"","what":"CIOptions_Hessian","title":"Confidence Interval Estimation Options — CIOptions","text":"Default options hessian method. epsilon: Numerical step size numerical differentiation. Default NULL, applies adaptive step size. confLevel: Confidence level interval estimation. Default 0.95 (95% confidence intervals).","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/CIOptions.html","id":"cioptions-pl","dir":"Reference","previous_headings":"","what":"CIOptions_PL","title":"Confidence Interval Estimation Options — CIOptions","text":"Default options PL (Profile Likelihood) method. epsilon: Numerical step size profile likelihood adjustments. Default NULL, applies adaptive step size. confLevel: Confidence level interval estimation. Default 0.95 (95% confidence intervals). maxIter: Maximum number iterations likelihood profiling. Default 100.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/CIOptions.html","id":"cioptions-bootstrap","dir":"Reference","previous_headings":"","what":"CIOptions_Bootstrap","title":"Confidence Interval Estimation Options — CIOptions","text":"Default options bootstrap method. nSamples: Number bootstrap resampling iterations. Default 1000. confLevel: Confidence level interval estimation. Default 0.95 (95% confidence intervals). seed: Random seed reproducibility. Default NULL.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ObjectiveFunctionOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Objective Function Options for Model Fit Assessment — ObjectiveFunctionOptions","title":"Objective Function Options for Model Fit Assessment — ObjectiveFunctionOptions","text":"Default settings objective function options model fit analysis, pivotal calculating error fit. configurations enable tailored analysis approaches, pivotal ParameterIdentification process optimizing parameter values observed data. options configured via PIConfiguration class.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ObjectiveFunctionOptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Objective Function Options for Model Fit Assessment — ObjectiveFunctionOptions","text":"","code":"ObjectiveFunctionOptions"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ObjectiveFunctionOptions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Objective Function Options for Model Fit Assessment — ObjectiveFunctionOptions","text":"object class list length 6.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ObjectiveFunctionOptions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Objective Function Options for Model Fit Assessment — ObjectiveFunctionOptions","text":"Settings include: objectiveFunctionType – Type objective function used. Default lsq (least squares), influencing error calculation. residualWeightingMethod – Method residual weighting. Default none. robustMethod – Method robust outlier handling. Default none (standard analysis). scaleVar – Whether residual scaling applied. Default FALSE. linScaleCV – Coefficient variation linear scaling. Default 0.2. logScaleSD – Standard deviation log scaling. Default NULL. options configurable PIConfiguration, directly influencing calculateCostMetrics functionality detailed model fit assessment.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ObjectiveFunctionSpecs.html","id":null,"dir":"Reference","previous_headings":"","what":"Objective Function Specifications — ObjectiveFunctionSpecs","title":"Objective Function Specifications — ObjectiveFunctionSpecs","text":"Specifies supported objective function configurations error calculation parameter optimization. specifications detail allowable options tailoring model fit assessed, configured within PIConfiguration.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ObjectiveFunctionSpecs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Objective Function Specifications — ObjectiveFunctionSpecs","text":"","code":"ObjectiveFunctionSpecs"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ObjectiveFunctionSpecs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Objective Function Specifications — ObjectiveFunctionSpecs","text":"object class list length 7.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ObjectiveFunctionSpecs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Objective Function Specifications — ObjectiveFunctionSpecs","text":"Includes: objectiveFunctionType – Type error calculation. Allowed values: lsq (least squares), m3\" (M3 method). residualWeightingMethod – Method weighting residuals. Allowed values: none, std, mean, error. robustMethod – Approach robust outlier handling. Allowed values: none, huber, bisquare. scaleVar – Boolean variance scaling. Allowed values: TRUE, FALSE. scaling – Scaling type. Allowed values: lin (linear), log (logarithmic). linScaleCV – Coefficient variation linear scaling. Numeric range: 1e-9 1. logScaleSD – Standard deviation log scaling. Numeric range: 1e-9 Inf. options directly influence optimization process defining discrepancies simulated observed data quantified managed.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIConfiguration.html","id":null,"dir":"Reference","previous_headings":"","what":"PIConfiguration — PIConfiguration","title":"PIConfiguration — PIConfiguration","text":"Encapsulates configurations optimization algorithm choice, evaluation settings parameter identification.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIConfiguration.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"PIConfiguration — PIConfiguration","text":"printEvaluationFeedback Boolean. TRUE, prints objective function value evaluation. Default FALSE. simulationRunOptions Object SimulationRunOptions simulation runs. NULL, default options used. objectiveFunctionOptions Settings model fit evaluation, affecting error metrics cost calculation. See ObjectiveFunctionSpecs details. Defaults ObjectiveFunctionOptions. algorithm Optimization algorithm name. See Algorithms list supported algorithms. Defaults BOBYQA. ciMethod Confidence interval estimation method. See CIMethods available options. Defaults hessian. algorithmOptions Named list settings specific selected algorithm.. Refer AlgorithmOptions default settings per algorithm (e.g., AlgorithmOptions_XYZ XYZ denotes algorithm name). NULL, algorithm's default settings applied. ciOptions Named list settings selected CI method. Refer CIOptions default settings per method (e.g., CIOptions_XYZ XYZ corresponds method name). NULL, CI method's default settings applied. autoEstimateCI Logical. TRUE, confidence intervals automatically estimated optimization. FALSE, step skipped can triggered manually calling estimateCI() method ParameterIdentification object. modelCostField Read-field name cost object used optimization target. Currently, modelCost supported.","code":""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIConfiguration.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PIConfiguration — PIConfiguration","text":"PIConfiguration$new() PIConfiguration$print() PIConfiguration$clone()","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIConfiguration.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PIConfiguration — PIConfiguration","text":"Initialize new instance class.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIConfiguration.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PIConfiguration — PIConfiguration","text":"","code":"PIConfiguration$new()"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIConfiguration.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"PIConfiguration — PIConfiguration","text":"new PIConfiguration object.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIConfiguration.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"PIConfiguration — PIConfiguration","text":"Prints summary PIConfiguration.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIConfiguration.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PIConfiguration — PIConfiguration","text":"","code":"PIConfiguration$print()"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIConfiguration.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PIConfiguration — PIConfiguration","text":"objects class cloneable method.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIConfiguration.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PIConfiguration — PIConfiguration","text":"","code":"PIConfiguration$clone(deep = FALSE)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIConfiguration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PIConfiguration — PIConfiguration","text":"deep Whether make deep clone.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":null,"dir":"Reference","previous_headings":"","what":"PIOutputMapping — PIOutputMapping","title":"PIOutputMapping — PIOutputMapping","text":"Establishes connections simulated quantities corresponding observed data sets. Utilized within ParameterIdentification instances align compare simulation outputs empirical data.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"PIOutputMapping — PIOutputMapping","text":"observedDataSets named list containing DataSet objects comparison simulation outcomes. dataTransformations named list factors offsets. dataWeights named list y-value weights. quantity Simulation quantities aligned observed data values. simId Identifier simulation associated mapped quantity. scaling Specifies scaling output mapping: linear (default) logarithmic. transformResultsFunction function preprocess simulated results (time observation values) residual calculation. takes numeric vectors 'xVals' 'yVals', returns named list keys 'xVals' 'yVals'.","code":""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PIOutputMapping — PIOutputMapping","text":"PIOutputMapping$new() PIOutputMapping$addObservedDataSets() PIOutputMapping$removeObservedDataSet() PIOutputMapping$setDataTransformations() PIOutputMapping$setDataWeights() PIOutputMapping$print() PIOutputMapping$clone()","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PIOutputMapping — PIOutputMapping","text":"Initialize new instance class.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PIOutputMapping — PIOutputMapping","text":"","code":"PIOutputMapping$new(quantity)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PIOutputMapping — PIOutputMapping","text":"quantity object type Quantity.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"PIOutputMapping — PIOutputMapping","text":"new PIOutputMapping object. Adds updates observed data using DataSet objects.","code":""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PIOutputMapping — PIOutputMapping","text":"","code":"PIOutputMapping$addObservedDataSets(data, weights = NULL)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PIOutputMapping — PIOutputMapping","text":"data DataSet object list thereof, matching simulation quantity dimensions. weights named list numeric values numeric vectors. names must match names observed datasets.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PIOutputMapping — PIOutputMapping","text":"Replaces existing data set label.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"method-removeobserveddataset-","dir":"Reference","previous_headings":"","what":"Method removeObservedDataSet()","title":"PIOutputMapping — PIOutputMapping","text":"Removes specified observed data series.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PIOutputMapping — PIOutputMapping","text":"","code":"PIOutputMapping$removeObservedDataSet(label)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"PIOutputMapping — PIOutputMapping","text":"label label observed data series remove.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"method-setdatatransformations-","dir":"Reference","previous_headings":"","what":"Method setDataTransformations()","title":"PIOutputMapping — PIOutputMapping","text":"Configures transformations dataset(s).","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"PIOutputMapping — PIOutputMapping","text":"","code":"PIOutputMapping$setDataTransformations(   labels = NULL,   xOffsets = 0,   yOffsets = 0,   xFactors = 1,   yFactors = 1 )"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"PIOutputMapping — PIOutputMapping","text":"labels List dataset labels targeted transformations. Absence labels applies transformations globally. xOffsets Numeric list/value X-offset adjustments. yOffsets Numeric list/value Y-offset adjustments. xFactors Numeric list/value X-scaling factors. yFactors Numeric list/value Y-scaling factors.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"method-setdataweights-","dir":"Reference","previous_headings":"","what":"Method setDataWeights()","title":"PIOutputMapping — PIOutputMapping","text":"Assigns weights observed data sets residual weighting parameter identification.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"PIOutputMapping — PIOutputMapping","text":"","code":"PIOutputMapping$setDataWeights(weights)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"PIOutputMapping — PIOutputMapping","text":"weights named list numeric values numeric vectors. names must match names observed datasets. element list can : scalar, broadcast y-values corresponding dataset, numeric vector matching number y-values dataset. apply dataset-level point-level weights, multiply beforehand provide combined result single numeric vector per dataset.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"PIOutputMapping — PIOutputMapping","text":"Prints summary PIOutputMapping.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"PIOutputMapping — PIOutputMapping","text":"","code":"PIOutputMapping$print()"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PIOutputMapping — PIOutputMapping","text":"objects class cloneable method.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"PIOutputMapping — PIOutputMapping","text":"","code":"PIOutputMapping$clone(deep = FALSE)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"PIOutputMapping — PIOutputMapping","text":"deep Whether make deep clone.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":null,"dir":"Reference","previous_headings":"","what":"PIParameters — PIParameters","title":"PIParameters — PIParameters","text":"parameter optimized parameter identification routine","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"PIParameters — PIParameters","text":"parameters list parameter objects. Adding removing parameters supported. currValue current parameter values simulations, units specified PIParameters$unit. startValue Initial value used optimization. minValue Lowest permissible parameter value. maxValue Highest permissible parameter value. unit Parameter value units. Changing unit auto-adjust min/max/start values.","code":""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PIParameters — PIParameters","text":"PIParameters$new() PIParameters$setValue() PIParameters$toDataFrame() PIParameters$print() PIParameters$clone()","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PIParameters — PIParameters","text":"Initialize new instance class. initial start value derived first parameter upon creation, modifiable via PIParameters$startValue. parameters optimized using unified value.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PIParameters — PIParameters","text":"","code":"PIParameters$new(parameters)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PIParameters — PIParameters","text":"parameters List Parameter class objects optimized.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"PIParameters — PIParameters","text":"new PIParameters object.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"method-setvalue-","dir":"Reference","previous_headings":"","what":"Method setValue()","title":"PIParameters — PIParameters","text":"Updates parameter(s) value. Value specified units PIParameters$unit.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PIParameters — PIParameters","text":"","code":"PIParameters$setValue(value)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PIParameters — PIParameters","text":"value Numeric value set.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"method-todataframe-","dir":"Reference","previous_headings":"","what":"Method toDataFrame()","title":"PIParameters — PIParameters","text":"Export parameter metadata configuration data frame. Returns one row per internal model parameter wrapped PIParameters object.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PIParameters — PIParameters","text":"","code":"PIParameters$toDataFrame(group = NULL)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"PIParameters — PIParameters","text":"group Optional character label identifying optimization group.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"PIParameters — PIParameters","text":"data.frame one row per internal parameter.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"PIParameters — PIParameters","text":"Prints summary PIParameters.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"PIParameters — PIParameters","text":"","code":"PIParameters$print()"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PIParameters — PIParameters","text":"objects class cloneable method.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"PIParameters — PIParameters","text":"","code":"PIParameters$clone(deep = FALSE)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"PIParameters — PIParameters","text":"deep Whether make deep clone.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIResult.html","id":null,"dir":"Reference","previous_headings":"","what":"PIResult — PIResult","title":"PIResult — PIResult","text":"Structured output parameter identification task, including optimization results, confidence intervals, parameter metadata, configuration.","code":""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIResult.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PIResult — PIResult","text":"PIResult$new() PIResult$toDataFrame() PIResult$toList() PIResult$print() PIResult$clone()","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIResult.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PIResult — PIResult","text":"Initializes PIResult instance. internal use . constructor used internally parameter identification workflow store standardize results optimization confidence interval estimation.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIResult.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PIResult — PIResult","text":"","code":"PIResult$new(   optimResult,   ciResult = NULL,   costDetails = NULL,   configuration = NULL,   piParameters = NULL )"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIResult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PIResult — PIResult","text":"optimResult named list containing optimization results. Typically produced internally Optimizer$run() includes fields par, value, startValues, elapsed, convergence, etc. ciResult (Optional) named list confidence interval results, returned Optimizer$estimateCI(). Contains fields like sd, cv, lowerCI, upperCI, elapsed, details. costDetails (Optional) named list detailed cost metrics computed optimization. configuration (Optional) PIConfiguration object used parameter identification. piParameters (Optional) list PIParameter objects used optimization. provided, default parameter names generated automatically.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIResult.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"PIResult — PIResult","text":"PIResult object containing optimization results, confidence interval estimates (available), parameter metadata (available), configuration.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIResult.html","id":"method-todataframe-","dir":"Reference","previous_headings":"","what":"Method toDataFrame()","title":"PIResult — PIResult","text":"Export PIResult data.frame.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIResult.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PIResult — PIResult","text":"","code":"PIResult$toDataFrame()"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIResult.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"PIResult — PIResult","text":"data frame following columns: group: Parameter group identifier name: Parameter name path: Full parameter path unit: Unit parameter estimate: Estimated parameter value optimization sd: Standard deviation CI estimation cv: Coefficient variation lowerCI: Lower confidence bound upperCI: Upper confidence bound initialValue: Initial parameter value used optimization","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIResult.html","id":"method-tolist-","dir":"Reference","previous_headings":"","what":"Method toList()","title":"PIResult — PIResult","text":"Returns full internal result list.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIResult.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PIResult — PIResult","text":"","code":"PIResult$toList()"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIResult.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"PIResult — PIResult","text":"named list containing result values.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIResult.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"PIResult — PIResult","text":"Prints summary PIResult","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIResult.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"PIResult — PIResult","text":"","code":"PIResult$print()"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIResult.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PIResult — PIResult","text":"objects class cloneable method.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIResult.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"PIResult — PIResult","text":"","code":"PIResult$clone(deep = FALSE)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIResult.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PIResult — PIResult","text":"deep Whether make deep clone.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":null,"dir":"Reference","previous_headings":"","what":"ParameterIdentification — ParameterIdentification","title":"ParameterIdentification — ParameterIdentification","text":"Performs parameter estimation fitting model simulations observed data. Supports customizable optimization confidence interval methods.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"ParameterIdentification — ParameterIdentification","text":"simulations named list Simulation objects, keyed IDs root containers. parameters list PIParameters, representing grouped set model parameters optimized (read-). configuration PIConfiguration object controlling algorithm, CI estimation, objective function options. outputMappings list PIOutputMapping objects mapping observed datasets simulated outputs.","code":""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ParameterIdentification — ParameterIdentification","text":"ParameterIdentification$new() ParameterIdentification$run() ParameterIdentification$estimateCI() ParameterIdentification$plotResults() ParameterIdentification$gridSearch() ParameterIdentification$calculateOFVProfiles() ParameterIdentification$print()","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"ParameterIdentification — ParameterIdentification","text":"Initializes ParameterIdentification instance.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ParameterIdentification — ParameterIdentification","text":"","code":"ParameterIdentification$new(   simulations,   parameters,   outputMappings,   configuration = NULL )"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ParameterIdentification — ParameterIdentification","text":"simulations Simulation list Simulation objects used parameter estimation. simulation must contain model parameters specified parameters. Use ospsuite::loadSimulation() load simulation files. parameters PIParameters list PIParameters objects specifying model parameters optimize. PIParameters object may group one underlying model parameters. See PIParameters details. outputMappings PIOutputMapping list PIOutputMapping objects mapping model outputs (represented Quantity objects) observed data. #' See PIOutputMapping details. configuration (Optional) PIConfiguration object specifying algorithm, CI method, objective function settings. Defaults new configuration omitted. See PIConfiguration configuration options.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"ParameterIdentification — ParameterIdentification","text":"ParameterIdentification object ready run parameter estimation. Executes Parameter Identification","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"method-run-","dir":"Reference","previous_headings":"","what":"Method run()","title":"ParameterIdentification — ParameterIdentification","text":"Runs parameter identification using configured optimization algorithm. Returns structured piResultsobject containing estimated parameters, diagnostics, (optionally) confidence intervals.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ParameterIdentification — ParameterIdentification","text":"","code":"ParameterIdentification$run()"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"ParameterIdentification — ParameterIdentification","text":"PIResult object containing optimization results. Estimate Confidence Intervals","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"method-estimateci-","dir":"Reference","previous_headings":"","what":"Method estimateCI()","title":"ParameterIdentification — ParameterIdentification","text":"Computes confidence intervals optimized parameters using method defined associated PIConfiguration. Intended advanced use autoEstimateCI set FALSE initial run.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ParameterIdentification — ParameterIdentification","text":"","code":"ParameterIdentification$estimateCI()"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"ParameterIdentification — ParameterIdentification","text":"PIResult object returned run() method, updated include confidence interval estimates. Plot Parameter Estimation Results","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"method-plotresults-","dir":"Reference","previous_headings":"","what":"Method plotResults()","title":"ParameterIdentification — ParameterIdentification","text":"Re-runs model simulations using current specified parameter values generates plots comparing predictions observed data.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ParameterIdentification — ParameterIdentification","text":"","code":"ParameterIdentification$plotResults(par = NULL)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"ParameterIdentification — ParameterIdentification","text":"par Optional parameter values simulations, order ParameterIdentification$parameters. Use current values NULL.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"ParameterIdentification — ParameterIdentification","text":"list ggplot2 plots (one per output mapping), showing: Individual time profiles Observed vs. simulated values Residuals vs. time Perform Parameter Grid Search Generates grid parameter combinations, computes OFV , optionally sets best result starting point s subsequent optimization. Note: resulting grid can used explore parameter space initialize better starting values.","code":""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"ParameterIdentification — ParameterIdentification","text":"","code":"ParameterIdentification$gridSearch(   lower = NULL,   upper = NULL,   logScaleFlag = FALSE,   totalEvaluations = 50,   setStartValue = FALSE )"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"ParameterIdentification — ParameterIdentification","text":"lower Numeric vector parameter lower bounds, defaulting PIParameter minimum values. upper Numeric vector parameter upper bounds, defaulting PIParameter maximum values. logScaleFlag Logical scalar vector; determines grid points spaced logarithmically. Default FALSE. totalEvaluations Integer specifying total grid points. Default 50. setStartValue Logical. TRUE, updates PIParameter starting values best grid point. Default FALSE.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"ParameterIdentification — ParameterIdentification","text":"tibble row parameter combination corresponding objective function value (ofv). Calculate Objective Function Value (OFV) Profiles Generates OFV profiles varying parameter independently holding others constant.","code":""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"ParameterIdentification — ParameterIdentification","text":"","code":"ParameterIdentification$calculateOFVProfiles(   par = NULL,   boundFactor = 0.1,   totalEvaluations = 20 )"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"ParameterIdentification — ParameterIdentification","text":"par Numeric vector parameter values, one parameter. Defaults current parameter values NULL, invalid mismatched. boundFactor Numeric value. value 0.1 means lower 10% par upper 10% par. Default 0.1. totalEvaluations Integer specifying total number grid points across parameter profile. Default 20.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"ParameterIdentification — ParameterIdentification","text":"list tibbles, one parameter, showing objective function value (OFV) changes varying parameter keeping others fixed.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"ParameterIdentification — ParameterIdentification","text":"Prints summary ParameterIdentification instance.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"ParameterIdentification — ParameterIdentification","text":"","code":"ParameterIdentification$print()"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ScalingOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Scaling Options for Output Mapping — ScalingOptions","title":"Scaling Options for Output Mapping — ScalingOptions","text":"Scaling options applicable output mappings, impacting simulation results compared observed data.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ScalingOptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scaling Options for Output Mapping — ScalingOptions","text":"","code":"ScalingOptions"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ScalingOptions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Scaling Options for Output Mapping — ScalingOptions","text":"object class list length 2.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ScalingOptions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scaling Options for Output Mapping — ScalingOptions","text":"Available scaling options: lin – Linear scaling (default). log – Logarithmic scaling, used data spans several orders magnitude.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-applyLogTransformation.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Log Transformation to Data Frame — .applyLogTransformation","title":"Apply Log Transformation to Data Frame — .applyLogTransformation","text":"Transforms yValues lloq columns given data frame using log transformation. Currently, function supports obsVsPredDf data frames, must contain yDimension, yUnit, yValues, lloq columns.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-applyLogTransformation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Log Transformation to Data Frame — .applyLogTransformation","text":"","code":".applyLogTransformation(df, base = exp(1))"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-applyLogTransformation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Log Transformation to Data Frame — .applyLogTransformation","text":"df tbl_df representing observed vs predicted data frame (obsVsPredDf). base positive numeric value specifying logarithm base. Defaults natural logarithm (exp(1)).","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-applyLogTransformation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Log Transformation to Data Frame — .applyLogTransformation","text":"transformed data frame log-transformed yValues lloq.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-applyLogTransformation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Log Transformation to Data Frame — .applyLogTransformation","text":"","code":"# Assuming df is a valid obsVsPredDf data frame if (FALSE) { # \\dontrun{ transformedDf <- applyLogTransformation(df) } # }"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-calculateBisquareWeights.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Bisquare Weights for Residuals — .calculateBisquareWeights","title":"Calculate Bisquare Weights for Residuals — .calculateBisquareWeights","text":"function calculates Bisquare (Tukey's biweight) weights residuals, aggressively reducing outlier influence. Scales residuals using MAD cutoff c times MAD.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-calculateBisquareWeights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Bisquare Weights for Residuals — .calculateBisquareWeights","text":"","code":".calculateBisquareWeights(residuals, c = 4.685)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-calculateBisquareWeights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Bisquare Weights for Residuals — .calculateBisquareWeights","text":"residuals Numeric vector residuals. c Tuning parameter outlier exclusion. Default 4.685.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-calculateBisquareWeights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Bisquare Weights for Residuals — .calculateBisquareWeights","text":"Numeric vector Bisquare weights.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-calculateCensoredContribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Contribution of Censored Data — .calculateCensoredContribution","title":"Calculate Contribution of Censored Data — .calculateCensoredContribution","text":"Evaluates impact censored data (quantification limit, BQL) model cost, employing maximum likelihood estimation integrate BQL observations effectively. acknowledging BQL data censored observations, method ensures data contribute model accuracy without misrepresenting actual concentrations. applies linear logarithmic scaling calculate standard deviations censored probabilities, enhancing overall model cost assessment respect detection limits.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-calculateCensoredContribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Contribution of Censored Data — .calculateCensoredContribution","text":"","code":".calculateCensoredContribution(   observed,   simulated,   scaling,   linScaleCV = NULL,   logScaleSD = NULL )"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-calculateCensoredContribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Contribution of Censored Data — .calculateCensoredContribution","text":"observed Data frame containing observed data, must include 'lloq', 'xValues', 'xUnit', 'xDimension', 'yValues' columns. simulated Data frame containing simulated data, must include 'xValues', 'xUnit', 'xDimension', 'yValues' columns. scaling Character string specifying scaling method; one predefined scaling options. linScaleCV Numeric, coefficient used calculate standard deviation linear scaling, applied 'lloq' values. logScaleSD Numeric, standard deviation logarithmic scaling, applied uniformly censored observations.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-calculateCensoredContribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Contribution of Censored Data — .calculateCensoredContribution","text":"Numeric value representing sum squared errors censored observations, contributing model's total cost.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-calculateCensoredContribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Contribution of Censored Data — .calculateCensoredContribution","text":"","code":"if (FALSE) { # \\dontrun{ .calculateCensoredContribution(observedData, simulatedData, scaling = \"lin\", linScaleCV = 0.2) } # }"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-calculateHuberWeights.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Huber Weights for Residuals — .calculateHuberWeights","title":"Calculate Huber Weights for Residuals — .calculateHuberWeights","text":"function calculates Huber weights residuals, reducing influence outliers. Uses MAD scaling applies cutoff k times MAD.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-calculateHuberWeights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Huber Weights for Residuals — .calculateHuberWeights","text":"","code":".calculateHuberWeights(residuals, k = 1.345)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-calculateHuberWeights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Huber Weights for Residuals — .calculateHuberWeights","text":"residuals Numeric vector residuals. k Tuning parameter outlier cutoff. Default 1.345.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-calculateHuberWeights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Huber Weights for Residuals — .calculateHuberWeights","text":"Numeric vector Huber weights.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-createErrorCostStructure.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructs Model Cost Summary for Error Handling — .createErrorCostStructure","title":"Constructs Model Cost Summary for Error Handling — .createErrorCostStructure","text":"Creates model cost summary compatible structure returned .calculateCostMetrics, filled either infinite values (simulation failures) zeros (objective function failures).","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-createErrorCostStructure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructs Model Cost Summary for Error Handling — .createErrorCostStructure","text":"","code":".createErrorCostStructure(infinite = FALSE)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-createErrorCostStructure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructs Model Cost Summary for Error Handling — .createErrorCostStructure","text":"infinite Logical flag indicating structure contain infinite values (TRUE) zeros (FALSE).","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-createErrorCostStructure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructs Model Cost Summary for Error Handling — .createErrorCostStructure","text":"model cost summary structured identically output .calculateCostMetrics, fields model cost, minimum log probability, statistical measures, detailed residuals, tailored failure scenarios initial setup.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-getSimulationContainer.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the simulation container of the entity — .getSimulationContainer","title":"Get the simulation container of the entity — .getSimulationContainer","text":"Get simulation container entity","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-getSimulationContainer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the simulation container of the entity — .getSimulationContainer","text":"","code":".getSimulationContainer(entity)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-getSimulationContainer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the simulation container of the entity — .getSimulationContainer","text":"entity Object type Entity","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-getSimulationContainer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the simulation container of the entity — .getSimulationContainer","text":"root container parent entity.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-isSameDimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Do all quantities have the same dimension? — .isSameDimension","title":"Do all quantities have the same dimension? — .isSameDimension","text":"quantities dimension?","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-isSameDimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do all quantities have the same dimension? — .isSameDimension","text":"","code":".isSameDimension(quantities)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-isSameDimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do all quantities have the same dimension? — .isSameDimension","text":"quantities Quantities dimensions compared","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-isSameDimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do all quantities have the same dimension? — .isSameDimension","text":"TRUE dimension quantities equal, otherwise FALSE","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-removeFormulaPaths.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove paths with formulas — .removeFormulaPaths","title":"Remove paths with formulas — .removeFormulaPaths","text":"Removes paths quantities defined explicit formula simulation","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-removeFormulaPaths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove paths with formulas — .removeFormulaPaths","text":"","code":".removeFormulaPaths(paths, simulation, stopIfNotFound = TRUE)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-removeFormulaPaths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove paths with formulas — .removeFormulaPaths","text":"paths List paths filtered simulation Simulation object containing quantities stopIfNotFound Boolean. TRUE (default), error thrown path found simulation.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-removeFormulaPaths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove paths with formulas — .removeFormulaPaths","text":"List quantity paths defined explicit formula.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-restoreSimulationState.html","id":null,"dir":"Reference","previous_headings":"","what":"Restore simulation output state — .restoreSimulationState","title":"Restore simulation output state — .restoreSimulationState","text":"Restore simulation output state","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-restoreSimulationState.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restore simulation output state — .restoreSimulationState","text":"","code":".restoreSimulationState(simulations, simStateList)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-restoreSimulationState.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restore simulation output state — .restoreSimulationState","text":"simulations List Simulation objects simStateList Output function .storeSimulationState. named list entries outputIntervals, timePoints, outputSelections. Every entry named list names IDs simulations.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-storeSimulationState.html","id":null,"dir":"Reference","previous_headings":"","what":"Stores current simulation output state — .storeSimulationState","title":"Stores current simulation output state — .storeSimulationState","text":"Stores simulation output intervals, output time points, output selections current state.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-storeSimulationState.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stores current simulation output state — .storeSimulationState","text":"","code":".storeSimulationState(simulations)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-storeSimulationState.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stores current simulation output state — .storeSimulationState","text":"simulations List Simulation objects","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-storeSimulationState.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stores current simulation output state — .storeSimulationState","text":"named list entries outputIntervals, timePoints, outputSelections. Every entry named list names IDs simulations.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-summarizeCostLists.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize Cost Lists — .summarizeCostLists","title":"Summarize Cost Lists — .summarizeCostLists","text":"function takes two lists, output .calculateCostMetrics function, summarizes . aggregates model costs min log probabilities, combines cost residual details row-binding.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-summarizeCostLists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize Cost Lists — .summarizeCostLists","text":"","code":".summarizeCostLists(list1, list2)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-summarizeCostLists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize Cost Lists — .summarizeCostLists","text":"list1 first list, containing output .calculateCostMetrics function, includes modelCost, minLogProbability, costVariables, residualDetails. list2 second list, containing output .calculateCostMetrics function, includes modelCost, minLogProbability, costVariables, residualDetails.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-summarizeCostLists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize Cost Lists — .summarizeCostLists","text":"Returns list includes sum modelCosts, sum minLogProbabilities, row-bound combination costVariables, row-bound combination residualDetails.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-validateIsSameDimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the dimensions of the quantities are equal. — .validateIsSameDimension","title":"Check if the dimensions of the quantities are equal. — .validateIsSameDimension","text":"Check dimensions quantities equal.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-validateIsSameDimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the dimensions of the quantities are equal. — .validateIsSameDimension","text":"","code":".validateIsSameDimension(quantities)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-validateIsSameDimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the dimensions of the quantities are equal. — .validateIsSameDimension","text":"quantities Quantities dimensions compared","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-validateOutputMappingHasData.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Observed Data Availability in PIOutputMapping — .validateOutputMappingHasData","title":"Validate Observed Data Availability in PIOutputMapping — .validateOutputMappingHasData","text":"Ensures PIOutputMapping object observed datasets. Throws error observed data found.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-validateOutputMappingHasData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Observed Data Availability in PIOutputMapping — .validateOutputMappingHasData","text":"","code":".validateOutputMappingHasData(object)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-validateOutputMappingHasData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Observed Data Availability in PIOutputMapping — .validateOutputMappingHasData","text":"object PIOutputMapping object list PIOutputMapping objects.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-validateSimulationIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Validates Matching IDs across Simulation IDs, PI Parameters, and Output Mappings — .validateSimulationIds","title":"Validates Matching IDs across Simulation IDs, PI Parameters, and Output Mappings — .validateSimulationIds","text":"Ensures every Simulation ID present matches corresponding IDs PIParameter OutputMapping instances. function crucial maintaining consistency preventing mismatches disrupt parameter identification processes.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-validateSimulationIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validates Matching IDs across Simulation IDs, PI Parameters, and Output Mappings — .validateSimulationIds","text":"","code":".validateSimulationIds(simulationIds, piParameters, outputMappings)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-validateSimulationIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validates Matching IDs across Simulation IDs, PI Parameters, and Output Mappings — .validateSimulationIds","text":"simulationIds Vector simulation IDs. piParameters List PIParameter instances, IDs extracted validated simulationIds. outputMappings List OutputMapping instances, IDs extracted validated simulationIds.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-validateSimulationIds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validates Matching IDs across Simulation IDs, PI Parameters, and Output Mappings — .validateSimulationIds","text":"TRUE IDs match accordingly, otherwise throws error detailing mismatch absence IDs.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/getOSPSuitePISetting.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the value of a global ospsuite.parameteridentification setting. — getOSPSuitePISetting","title":"Get the value of a global ospsuite.parameteridentification setting. — getOSPSuitePISetting","text":"Get value global ospsuite.parameteridentification setting.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/getOSPSuitePISetting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the value of a global ospsuite.parameteridentification setting. — getOSPSuitePISetting","text":"","code":"getOSPSuitePISetting(settingName)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/getOSPSuitePISetting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the value of a global ospsuite.parameteridentification setting. — getOSPSuitePISetting","text":"settingName String name setting","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/getOSPSuitePISetting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the value of a global ospsuite.parameteridentification setting. — getOSPSuitePISetting","text":"Value setting stored piEnv. setting exist, error thrown.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/getOSPSuitePISetting.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the value of a global ospsuite.parameteridentification setting. — getOSPSuitePISetting","text":"","code":"getOSPSuitePISetting(\"packageVersion\") #>      version  #> \"2.1.0.9002\""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ospsuitePIRSettingNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Names of the settings stored in piEnv Can be used with getOSPSuitePISetting() — ospsuitePIRSettingNames","title":"Names of the settings stored in piEnv Can be used with getOSPSuitePISetting() — ospsuitePIRSettingNames","text":"Names settings stored piEnv Can used getOSPSuitePISetting()","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ospsuitePIRSettingNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Names of the settings stored in piEnv Can be used with getOSPSuitePISetting() — ospsuitePIRSettingNames","text":"","code":"ospsuitePIRSettingNames"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ospsuitePIRSettingNames.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Names of the settings stored in piEnv Can be used with getOSPSuitePISetting() — ospsuitePIRSettingNames","text":"object class list length 2.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/plot.modelCost.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Model Cost Residuals — plot.modelCost","title":"Plot Model Cost Residuals — plot.modelCost","text":"Plots raw residuals , different, weighted robust weighted residuals modelCost object.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/plot.modelCost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Model Cost Residuals — plot.modelCost","text":"","code":"# S3 method for class 'modelCost' plot(x, legpos = \"topright\", ...)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/plot.modelCost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Model Cost Residuals — plot.modelCost","text":"x modelCost object containing residuals plot. legpos Position legend; default \"topright\". Use NA omit legend. ... Additional arguments passed plot function.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/plot.modelCost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Model Cost Residuals — plot.modelCost","text":"Generates plot.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/plot.modelCost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Model Cost Residuals — plot.modelCost","text":"","code":"# Assuming modelCostObj is a valid `modelCost` object if (FALSE) { # \\dontrun{ plot.modelCost(modelCostObj) } # }"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/residualWeightingOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Residual Weighting Methods for Cost Function — residualWeightingOptions","title":"Residual Weighting Methods for Cost Function — residualWeightingOptions","text":"Methods weighting residuals model cost function, affecting discrepancies simulations observed data evaluated.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/residualWeightingOptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Residual Weighting Methods for Cost Function — residualWeightingOptions","text":"","code":"residualWeightingOptions"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/residualWeightingOptions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Residual Weighting Methods for Cost Function — residualWeightingOptions","text":"object class list length 4.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/residualWeightingOptions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Residual Weighting Methods for Cost Function — residualWeightingOptions","text":"methods include: none – weighting applied, treating residuals equally. error – Weights based error estimates dependent variable observed data. std – Weights equal reciprocal standard deviation observed data. mean – Weights based reciprocal mean absolute values observed data, useful relative error scaling.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/robustMethodOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Robust Weighting Methods for Cost Function — robustMethodOptions","title":"Robust Weighting Methods for Cost Function — robustMethodOptions","text":"Robust weighting methods address outliers cost function calculation parameter optimization.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/robustMethodOptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Robust Weighting Methods for Cost Function — robustMethodOptions","text":"","code":"robustMethodOptions"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/robustMethodOptions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Robust Weighting Methods for Cost Function — robustMethodOptions","text":"object class list length 3.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/robustMethodOptions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Robust Weighting Methods for Cost Function — robustMethodOptions","text":"available methods : none – robust weighting applied. huber – Huber weighting moderate outliers. bisquare – Bisquare (Tukey's biweight) weighting severe outliers.","code":""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/news/index.html","id":"minor-improvements-and-bug-fixes-development-version","dir":"Changelog","previous_headings":"","what":"Minor improvements and bug fixes","title":"ospsuite.parameteridentification (development version)","text":"Automatically report one-sided confidence intervals parameter estimate falls outside bootstrap CI skewed distributions. result, opposite bound set NAand ciType set one-sided (#217).","code":""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/news/index.html","id":"breaking-changes-2-1-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"ospsuite.parameteridentification 2.1.0","text":"´ospsuite.parameteridentificationnow requiresospsuite.utils` version >= 1.7.0. ´ospsuite.parameteridentificationnow requiresospsuite` version >= 12.2.0. Optimization CI results now returned PIResult object instead list. provides unified structure new helper methods summaries export (#196).","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/news/index.html","id":"major-changes-2-1-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"ospsuite.parameteridentification 2.1.0","text":"Optimization backend refactored improved robustness. changes user interface (#161, #186). PIOutputMapping: new $setDataWeights() method assigning weights observed data sets individual data points (#178). New confidence interval methods PL (profile likelihood) bootstrap now supported via PIConfiguration (#167, #186, #188, #189, #190). New PIResult supports $print(), $toDataFrame(), $toList() methods summaries, export, diagnostics (#196).","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/news/index.html","id":"minor-improvements-and-bug-fixes-2-1-0","dir":"Changelog","previous_headings":"","what":"Minor improvements and bug fixes","title":"ospsuite.parameteridentification 2.1.0","text":"Improved print outputs classes (#171). classes inherit ospsuite.utils::Printable (#171). Default settings CI methods provided CIOptions_Hessian, CIOptions_PL, CIOptions_Bootstrap (#167). Supports ArithmeticStdDev GeometricStdDev error types passed observed DataSet yErrorType. effect residualWeightingMethod = \"error\" set via PIConfiguration$objectiveFunctionOptions (#181). Harmonized CI output naming: sd, se, cv rse now used consistently correctly (#191). Improved Hessian-based confidence interval estimation: covariance matrix scaled SSR objective functions (#192). Optimization CI estimation validated PK-Sim results Aciclovir model, confirming correctness estimates (#193). Confidence interval estimation can disabled setting piConfiguration$autoEstimateCI <- FALSE; can run explicitly ParameterIdentification$estimateCI() (#196). New vignette confidence intervals, covering available methods, configuration, result inspection (#198). New vignette data mapping, including adding data weights set data transformation (#199). PIResult stores costDetails best (minimum modelCost) evaluation rather last, ensuring correct output runs limited stop early (#206).","code":""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/news/index.html","id":"major-changes-2-0-2","dir":"Changelog","previous_headings":"","what":"Major changes","title":"ospsuite.parameteridentification 2.0.2","text":"ParameterIdentification$gridSearch() andParameterIdentification$calculateOFVProfiles() made available refactored robustness, clarity, efficiency (#151).","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/news/index.html","id":"minor-improvements-and-fixes-2-0-2","dir":"Changelog","previous_headings":"","what":"Minor improvements and fixes","title":"ospsuite.parameteridentification 2.0.2","text":"ParameterIdentification validate observed data availability PIOutputMapping initialization (#145). Cache Simulation ID PIOutputMapping(#146). PIOutputMapping attempt retrieve molecular weight unit conversion adding observed data (#147). ParameterIdentification now differentiates simulation failures first iteration (stopping optimization) subsequent iterations (returning infinite cost structure) (#148). Simulation failure gridSearchand calculateOFVProfile won’t break evaluation return Inf specific parameters (#153). Robust Hessian epsilon calculation ParameterIdentification (#160).","code":""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/news/index.html","id":"breaking-changes-2-0-1","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"ospsuite.parameteridentification 2.0.1","text":"Function getSteadyState removed favor getSteadyState {ospsuite} package (#128). Function validateIsOption removed favor ospsuite.utils::validateIsOption (#130).","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/news/index.html","id":"minor-improvements-and-fixes-2-0-1","dir":"Changelog","previous_headings":"","what":"Minor improvements and fixes","title":"ospsuite.parameteridentification 2.0.1","text":"Fix pkgdown build (#131) Fix bug simulation ID verification (#138)","code":""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/news/index.html","id":"breaking-changes-2-0-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"ospsuite.parameteridentification 2.0.0","text":"Requires {ospsuite} version 12.0 later (#98, #114). PIConfiguration now configures objective function via objectiveFunctionOptions. Users can specify options directly, including objectiveFunctionType, residualWeightingMethod, robustMethod, scaleVar, linScaleCV (#100). ParameterIdentification$gridSearch() andParameterIdentification$calculateOFVProfiles() functions disabled fixed (#91, #92).","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/news/index.html","id":"major-changes-2-0-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"ospsuite.parameteridentification 2.0.0","text":"New calculateCostMetrics() function ParameterIdentification enhances model evaluation integrated configuration via PIConfiguration. Settings defaults specified ObjectiveFunctionOptions (#64, #65, #100). objectiveFunctionType: lsq least squares m3 censored data maximum likelihood estimation. residualWeightingMethod: options include none, std normalizes standard deviation variable data, mean scales mean diverse magnitudes, error weights inverse variance known error data. robustMethod: none uniform treatment, huber bisquare outlier minimization. scaleVar: boolean indicating whether scale residuals number observations. linScaleCV: Numeric coefficient used calculate standard deviation linear scaling, applied lloq values m3method used. logScaleSD: Numeric standard deviation logarithmic scaling, applied lloq values m3method used. New error-calculation vignette, explaining error model methodologies within ospsuite.parameteridentification package. document elaborates lsq (Least Squares Error) m3 (Extended Least Squares Error censored data) error models, along advanced customization options error modeling. resource aids users refining parameter identification processes. (#102, #111). New optimization-algorithms vignette, introducing algorithms available parameter estimation offering insights optimal application scenarios (#104, #111). New user-guide vignette parameter identification (PI). vignette provides comprehensive overview setting PI tasks, including defining simulations, specifying parameters identified, mapping model outputs observed data, configuring optimization tasks. Examples across three complexity levels models demonstrate package’s functionality detail (#48). New plot.modelCost() function visualizing raw weighted residuals modelCost objects (#100). Comprehensive overhaul documentation, clarity, comprehensiveness, ease navigation users (#111). Unit test overhaul coverage enhancement, increasing 67% 85% (#99, #100, #113).","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/news/index.html","id":"minor-improvements-and-fixes-2-0-0","dir":"Changelog","previous_headings":"","what":"Minor improvements and fixes","title":"ospsuite.parameteridentification 2.0.0","text":"Enhanced error handling now ensures ParameterIdentification tasks validate existence simulation objects referenced PIParameters OutputMapping prevent runtime errors due missing dependencies (#117, #120). Enhanced calculateCostMetrics() output ParameterIdentification offers detailed results summary model evaluation. summary now includes modelCost, minLogProbability, costVariables dataframe scaleFactor, nObservations, M3Contribution, SSR (sum squared residuals), weightedSSR, normalizedSSR, robustSSR (#100). README file conversion .rmd format subsequent updates (#86, #93). Improved error handling ParameterIdentification cases simulation failure, ensuring consistent informative error cost structure output (#66, #70, #100). validateIsOption() ensures user-specified options adhere defined constraints, enhancing robustness user inputs (#100). ParameterIdentification now directly accesses default optimization algorithm options BOBYQA, HJKB, DEoptim respective packages (nloptr, {dfoptim}, DEoptim) explicitly defined PIConfiguration (#48, #81). Continuous Integration/Continuous Deployment pipeline improvements (#95, #106, #110) Several bug fixes (#83, #109, #110, #115, #119, #122)","code":""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/news/index.html","id":"breaking-changes-1-3","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"ospsuite.parameteridentification 1.3","text":"parameter PIConfiguration class controlling feedback function evaluation now called printEvaluationFeedback instead printItera tionFeedback.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/news/index.html","id":"major-changes-1-3","dir":"Changelog","previous_headings":"","what":"Major changes","title":"ospsuite.parameteridentification 1.3","text":"Added new optimization algorithms: default local algorithm now implementation BOBYQA algorithm (bounded optimization quadratic approximation) nloptr package; additional local algorithm HJKB, bounded implementation Hooke-Jeeves derivative-free algorithm {dfoptim} package; global algorithm DEoptim differential evolution optimization. FME::modCost() re-implemented part parameter identification package used calculation residuals.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/news/index.html","id":"minor-bug-fixes-and-improvements-1-3","dir":"Changelog","previous_headings":"","what":"Minor bug fixes and improvements","title":"ospsuite.parameteridentification 1.3","text":"Calculation residuals fail observed data contains one time point. Calculation hessian close bounds parameter values improved.","code":""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/news/index.html","id":"breaking-changes-1-2","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"ospsuite.parameteridentification 1.2","text":"requires ospsuite v11.1 later.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/news/index.html","id":"minor-bug-fixes-and-improvements-1-2","dir":"Changelog","previous_headings":"","what":"Minor bug fixes and improvements","title":"ospsuite.parameteridentification 1.2","text":"getSteadyState() accepts steady state time individually simulation.","code":""}]
