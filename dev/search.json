[{"path":[]},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/optimization-algorithms.html","id":"used-algorithms","dir":"Articles","previous_headings":"","what":"Used algorithms","title":"Optimization algorithms","text":"Describe BRIEFLY different algorithms used PI package. implemented third-party package, refer documentation package. feasible, list algorithm options. Give rough guidlines algorithm use situation. Default algorithm BOBYQA method (bound optimization quadratic approximation), local derivative-based method. complex problems objective function may lack stable numerical derivatives may large number local minima, HJKB derivative-free Hooke-Jeeves algorithm DEoptim global stochastic differential evolution algorithm may provide better results cost overall execution time.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/user-guide.html","id":"parameter-estimation-problems","dir":"Articles","previous_headings":"","what":"Parameter estimation problems","title":"User guide","text":"Biosimulation models include numerical parameters determine outputs model. Often, values parameters known advance identified matching possible model outputs observed data. Finding parameter values best match observed data called parameter identification. ospsuite.parameteridentification package provides workflow setting tasks based existing PKML models, mapping model outputs observed data, estimating parameters. , three models increasing complexity used demonstrate functionality package.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/user-guide.html","id":"pi-workflow","dir":"Articles","previous_headings":"","what":"PI workflow","title":"User guide","text":"overall workflow similar running parameter identification (PI) PK-Sim MoBi, see corresponding documentation chapter. set PI task, user define: set simulations can use multiple simulations one optimization task. example, can identify value parameter (e.g., lipophilicity compound) using data different dosings. Definition parameters identified Mapping model outputs observed data Configuration optimization task, including selection algorithm algorithm options.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/user-guide.html","id":"simulations","dir":"Articles","previous_headings":"PI workflow","what":"Simulations","title":"User guide","text":"set Simulation objects. See documentation {ospsuite-r} load adjust simulations. example, load two instances Aciclovir PBPK model provided {ospsuite-r} package. want optimize lipophilicity renal clearance using plasma concentration data gathered 10-minute intravenous infusion aciclovir doses 250 mg 500 mg. Lipophilicity considered scenario-independent parameter, .e., value applied simulations. renal clearance, can assume inter-individual variability optimize value parameter separately dose group. start loading simulation *.pkml file twice. dose simulation set 250 mg. Remember Simulation objects created loading *.pkml file, represent two independent instances simulation. next step, retrieve objects application dose parameters change dose second simulation 500 mg.","code":"sim_250mg <- loadSimulation(system.file(\"extdata\", \"Aciclovir.pkml\", package = \"ospsuite\")) sim_500mg <- loadSimulation(system.file(\"extdata\", \"Aciclovir.pkml\", package = \"ospsuite\")) # Path to the dose parameter doseParameterPath <- \"Applications|IV 250mg 10min|Application_1|ProtocolSchemaItem|Dose\" # Get the parameter from the first simulation  # Get the instances of the parameters sim_250mg_doseParam <- getParameter(path = doseParameterPath, container = sim_250mg) print(sim_250mg_doseParam) #> Parameter:  #>    Path: Applications|IV 250mg 10min|Application_1|ProtocolSchemaItem|Dose  #>    Value: 2.50e-04 [kg]  #>    isConstant: TRUE  #>    isStateVariable: FALSE sim_500mg_doseParam <- getParameter(path = doseParameterPath, container = sim_500mg)  # Chage the value to 500 mg setParameterValues(parameters = sim_500mg_doseParam, values = 500, units = \"mg\") print(sim_500mg_doseParam) #> Parameter:  #>    Path: Applications|IV 250mg 10min|Application_1|ProtocolSchemaItem|Dose  #>    Value: 5.00e-04 [kg]  #>    isConstant: TRUE  #>    isStateVariable: FALSE"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/user-guide.html","id":"definition-of-parameters-to-be-identified","dir":"Articles","previous_headings":"PI workflow","what":"Definition of parameters to be identified","title":"User guide","text":"Specification parameters identified done creating objects class PIParameters. PIParameter describes single model parameter group parameters optimized together, .e., model parameters grouped PIParameters object value optimization. PIParameter also defines optimizationâ€™s start minimal maximal values. multiple model parameters linked one PIParameters instance, can belong different simulations come simulation. , example, two simulations two individuals compound, may one identification parameter, lipophilicity, linked lipophilicity parameters two simulations. time, can define two identification parameters individual reference concentrations specific enzyme. Consider example . create three PIParameters objects - one lipophilicity aciclovir, parameters two simulations linked together, two PIParameters renal clearance, considered independent. PIParameter following properties: $value: Current value parameter. Corresponds value Parameter object used PIParameters. multiple parameters linked together, value first parameter added used. $startValue: Start value parameter(s) used identification. default, value first added parameter. Can changed. $minValue: Minimal allowed value. default, 0.1-fold start value. Can changed. $maxValue: Maximal allowed value. default, 10-fold start value. Can changed. $unit: Unit start, min, max values. WARNING: changing unit update values! E.g., default start, min, max values renal clearance parameter given 1/min: Setting unit 1/h cause identification start 0.94 1/h, current value still 0.94 1/h 0.94 1/h * 60 min = 56.47 1/h: set boundaries lipophilicity [-10, 10], renal clearance [0, 10] 1/min:","code":"# Creating a PIParameters object with two simulation parameters retrieved from different simulations piParameterLipo <- PIParameters$new(parameters = list(   getParameter(path = \"Aciclovir|Lipophilicity\", container = sim_250mg),   getParameter(path = \"Aciclovir|Lipophilicity\", container = sim_500mg) ))  # Creating two separate PIParameters for the renal clearance piParameterCl_250mg <- PIParameters$new(parameters = getParameter(path = \"Neighborhoods|Kidney_pls_Kidney_ur|Aciclovir|Renal Clearances-TS|TSspec\", container = sim_250mg)) piParameterCl_500mg <- PIParameters$new(parameters = getParameter(path = \"Neighborhoods|Kidney_pls_Kidney_ur|Aciclovir|Renal Clearances-TS|TSspec\", container = sim_500mg)) print(piParameterCl_250mg) #> PIParameters:  #>    Number of parameters: 1  #>    Value: 0.941241  #>    Start value: 0.941241  #>    Min value: 0.0941241  #>    Max value: 9.41241  #>    Unit: 1/min piParameterCl_250mg$unit <- ospUnits$`Inversed time`$`1/h` print(piParameterCl_250mg) #> PIParameters:  #>    Number of parameters: 1  #>    Value: 56.47446  #>    Start value: 0.941241  #>    Min value: 0.0941241  #>    Max value: 9.41241  #>    Unit: 1/h piParameterLipo$minValue <- -10 piParameterLipo$maxValue <- 10  piParameterCl_250mg$minValue <- 0 piParameterCl_250mg$maxValue <- 10 piParameterCl_250mg$unit <- ospUnits$`Inversed time`$`1/min`  piParameterCl_500mg$minValue <- 0 piParameterCl_500mg$maxValue <- 10 piParameterCl_500mg$unit <- ospUnits$`Inversed time`$`1/min`  print(piParameterLipo) #> PIParameters:  #>    Number of parameters: 2  #>    Value: -0.097  #>    Start value: -0.097  #>    Min value: -10  #>    Max value: 10  #>    Unit: Log Units print(piParameterCl_250mg) #> PIParameters:  #>    Number of parameters: 1  #>    Value: 0.941241  #>    Start value: 0.941241  #>    Min value: 0  #>    Max value: 10  #>    Unit: 1/min print(piParameterCl_500mg) #> PIParameters:  #>    Number of parameters: 1  #>    Value: 0.941241  #>    Start value: 0.941241  #>    Min value: 0  #>    Max value: 10  #>    Unit: 1/min"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/user-guide.html","id":"mapping-of-model-output-to-observed-data","dir":"Articles","previous_headings":"PI workflow","what":"Mapping of model output to observed data","title":"User guide","text":"order calculate error model, simulation outputs must linked observed data. One simulation output can linked multiple observed data sets framework. error calculated pair simulated output linked data set added total error. mapping done creating object class PIOutputMapping. object links single Quantity simulation multiple DataSet objects. first step, load two observed data sets Excel file provided package. Read article Observed data ospsuite documentation details. data sets hold concentration data aciclovir venous blood; corresponding simulation output path: create two objects PIOutputMapping class, one dose group: link simulation results corresponding observed data: scaling output mapping defines residuals simulated observed data calculated. details, see article error-functions. concentration data, change scaling logarithmic: data sets (simulated results observed data) within PIOutputMapping can transformed applying offsets scaling factors following logic implemented DataCombined class.","code":"filePath <- system.file(\"extdata\", \"Aciclovir_Profiles.xlsx\", package = \"ospsuite.parameteridentification\")  # Create importer configuration for the file importConfig <- createImporterConfigurationForFile(filePath = filePath) # Set naming patter importConfig$namingPattern <- \"{Source}.{Sheet}.{Dose}\" # Import data sets obsData <- loadDataSetsFromExcel(xlsFilePath = filePath, importerConfigurationOrPath = importConfig, importAllSheets = TRUE)  print(names(obsData)) #> [1] \"Aciclovir_Profiles.Vergin 1995.Iv.250 mg\" #> [2] \"Aciclovir_Profiles.Vergin 1995.Iv.500 mg\" simOutputPath <- \"Organism|PeripheralVenousBlood|Aciclovir|Plasma (Peripheral Venous Blood)\" outputMapping_250mg <- PIOutputMapping$new(quantity = getQuantity(path = simOutputPath, container = sim_250mg))  outputMapping_500mg <- PIOutputMapping$new(quantity = getQuantity(path = simOutputPath, container = sim_500mg)) outputMapping_250mg$addObservedDataSets(obsData$`Aciclovir_Profiles.Vergin 1995.Iv.250 mg`) outputMapping_500mg$addObservedDataSets(obsData$`Aciclovir_Profiles.Vergin 1995.Iv.500 mg`)  print(outputMapping_250mg) #> PIOutputMapping:  #>    Output path: Organism|PeripheralVenousBlood|Aciclovir|Plasma (Peripheral Venous Blood)  #>    Observed data labels: Aciclovir_Profiles.Vergin 1995.Iv.250 mg  #>    Scaling: lin outputMapping_250mg$scaling <- \"log\" outputMapping_500mg$scaling <- \"log\""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/user-guide.html","id":"configuration","dir":"Articles","previous_headings":"PI workflow","what":"Configuration","title":"User guide","text":"configuration PI includes selection algorithm, setting algorithm settings, options. PI configuration defined PIConfiguration object can re-used multiple PI tasks. user-defined configuration provided PI task, default one created following properties: printEvaluationFeedback (logical) indicates objective function value printed iteration simulationRunOptions: Object type SimulationRunOptions passed simulation runs. NULL, default options used. targetFunctionType (possible values listed ospsuite.parameteridentification::ObjectiveFunctionOptions) indicates objective function used calculate difference observed data simulated curve. See article vignette(\"error-calculation\") information. algorithm (possible values: HJKB, BOBYQA, DEoptim) indicates optimization algorithms used. Algorithm options can specified list passed piConfiguration$algorithmOptions. Supported algorithms options described vignette(\"optimization-algorithms\"). default settings listed AlgorithmOptions_XYZ, XYZ algorithmâ€™s name. example, default settings BOBYQA algorithm stored AlgorithmOptions_BOBYQA: E.g. set maximal number function evaluations 1500 BOBYQA algorithm, can use following code:","code":"piConfiguration <- PIConfiguration$new() print(piConfiguration) #> PIConfiguration:  #>    Print feedback after each function evaluation: FALSE  #>    Objective function type: lsq  #>    Residual weighting method: none  #>    Robust residual calculation method: none  #>    Optimization algorithm: BOBYQA print(AlgorithmOptions_BOBYQA) #> $stopval #> [1] -Inf #>  #> $xtol_rel #> [1] 1e-06 #>  #> $maxeval #> [1] 1000 #>  #> $ftol_rel #> [1] 0 #>  #> $ftol_abs #> [1] 0 #>  #> $check_derivatives #> [1] FALSE #>  #> $algorithm #> NULL defOptions <- AlgorithmOptions_BOBYQA defOptions$maxFunctionEvaluations <- 1500 piConfiguration$algorithmOptions <- defOptions"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/user-guide.html","id":"running-a-parameter-identification-task","dir":"Articles","previous_headings":"PI workflow","what":"Running a parameter identification task","title":"User guide","text":"simulation, identification parameters, mappings observed simulated data, configuration defined, used instance ParameterIdentification class: first can create time profiles comparing simulation results observed data current parameter values. separate time profile created PIOutputMapping.   NOTE: figures created current values parameters, start values! can now run PI print results: output optimization run : taskResults$par: vector point estimates parameters taskResults$lwr taskResults$upr: vectors lower bounds upper bounds 95% confidence interval parameters taskResults$cv: vector coefficient variation (standard deviation point estimate, percents) parameters taskResults$value objective function value point estimate taskResults$elapsed (seconds) wall time took run main optimization routine, excluding hessian calculations taskResults$nrOfFnEvaluations number times objective function evaluated main optimization routine, excluding hessian calculations optimal values directly applied Parameter objects used PI.","code":"piTask <- ParameterIdentification$new(   simulations = list(sim_250mg, sim_500mg),   parameters = list(piParameterLipo, piParameterCl_250mg, piParameterCl_500mg),   outputMappings = list(outputMapping_250mg, outputMapping_500mg),   configuration = piConfiguration ) piTask$plotResults() #> Warning in ggplot2::scale_y_continuous(limits = private$.valuesLimits, position = self$position, : log-10 transformation introduced infinite values. #> log-10 transformation introduced infinite values. #> [[1]] #> Warning in ggplot2::scale_y_continuous(limits = private$.valuesLimits, position #> = self$position, : log-10 transformation introduced infinite #> values. #>  #> [[2]] #> Warning in ggplot2::scale_y_continuous(limits = private$.valuesLimits, position #> = self$position, : log-10 transformation introduced infinite #> values. piResults <- piTask$run() #> Running optimization algorithm: BOBYQA #> Warning in nl.opts(control): Unknown names in control: maxFunctionEvaluations #> Warning in nl.opts(control): Option 'algorithm can not be set here; will be #> overwritten. #> Post-hoc estimation of Hessian matrix. print(piResults) #> $par #> [1] -1.2816387  0.8352532  0.7571563 #>  #> $value #> [1] 6.536445 #>  #> $iter #> [1] 109 #>  #> $convergence #> [1] 1 #>  #> $message #> [1] \"NLOPT_SUCCESS: Generic success return value.\" #>  #> $elapsed #> [1] 34.44 #>  #> $algorithm #> [1] \"BOBYQA\" #>  #> $nrOfFnEvaluations #> [1] 111 #>  #> $hessian #>           [,1]          [,2]          [,3] #> [1,] 49.859194 -4.596684e+00 -5.102561e+00 #> [2,] -4.596684  2.127266e+01  1.193018e-11 #> [3,] -5.102561  1.193018e-11  2.534869e+01 #>  #> $sigma #> [1] 0.2044678 0.3097894 0.2838900 #>  #> $lwr #> [1] -1.6823882  0.2280772  0.2007420 #>  #> $upr #> [1] -0.8808893  1.4424293  1.3135706 #>  #> $cv #> [1] 15.95362 37.08928 37.49425"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/articles/user-guide.html","id":"diagnostics","dir":"Articles","previous_headings":"PI workflow","what":"Diagnostics","title":"User guide","text":"assess goodness fit, plot time profiles optimization:   quality fit can assessed following criteria: individual time profile close observed data points. predicted-vs-observed plot close diagonal. residuals randomly distributed zero. residuals zero indicate overprediction underprediction. Another set parameters likely result better fit.","code":"piTask$plotResults() #> Warning in ggplot2::scale_y_continuous(limits = private$.valuesLimits, position = self$position, : log-10 transformation introduced infinite values. #> log-10 transformation introduced infinite values. #> [[1]] #> Warning in ggplot2::scale_y_continuous(limits = private$.valuesLimits, position #> = self$position, : log-10 transformation introduced infinite #> values. #>  #> [[2]] #> Warning in ggplot2::scale_y_continuous(limits = private$.valuesLimits, position #> = self$position, : log-10 transformation introduced infinite #> values."},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Open Systems Pharmacology. Copyright holder. esqLABS. Funder. Pavel Balazki. Author, maintainer. Sergei Vavilov. Author. Rudi Engelke. Author. Felix Mil. Contributor.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Balazki P, Vavilov S, Engelke R (2024). ospsuite.parameteridentification: Open Systems Pharmacology Parameter Identification package. R package version 1.3.0.9000, https://github.com/open-systems-pharmacology/ospsuite.parameteridentification.","code":"@Manual{,   title = {ospsuite.parameteridentification: Open Systems Pharmacology Parameter Identification package},   author = {Pavel Balazki and Sergei Vavilov and Rudi Engelke},   year = {2024},   note = {R package version 1.3.0.9000},   url = {https://github.com/open-systems-pharmacology/ospsuite.parameteridentification}, }"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/index.html","id":"ospsuiteparameteridentification","dir":"","previous_headings":"","what":"Open Systems Pharmacology Parameter Identification package","title":"Open Systems Pharmacology Parameter Identification package","text":"ospsuite.parameteridentification R package provides functionality performing parameter identification (.e., fitting model observed data) simulations created Open Systems Pharmacology Software tools PK-Sim MoBi. package requires ospsuite package run simulations.","code":""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/index.html","id":"windows","dir":"","previous_headings":"Installation","what":"Windows","title":"Open Systems Pharmacology Parameter Identification package","text":"package can installed GitHub using remotes package. Windows, simply run following code: Get latest development version :","code":"# {ospsuite.parameteridentification} and its Open Systems Pharmacology Suite's dependencies relies on # {rClr} (https://github.com/Open-Systems-Pharmacology/rClr) which is not # available on CRAN. # Therefore, these must be installed from github using `{remotes}`. # You can skip this step if you have already installed the `{ospsuite`} package.  install.packages(\"remotes\") install.packages(\"https://github.com/Open-Systems-Pharmacology/rClr/releases/download/v0.9.2/rClr_0.9.2.zip\",   type = \"binary\" )  remotes::install_github(\"Open-Systems-Pharmacology/OSPSuite.ParameterIdentification@*release\") remotes::install_github(\"Open-Systems-Pharmacology/OSPSuite.ParameterIdentification\")"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/index.html","id":"linux","dir":"","previous_headings":"Installation","what":"Linux","title":"Open Systems Pharmacology Parameter Identification package","text":"Linux, follow instructions install {ospsuite} first run (remove @*release get latest development version).","code":"remotes::install_github(\"Open-Systems-Pharmacology/OSPSuite.ParameterIdentification@*release\")"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/index.html","id":"user-guide","dir":"","previous_headings":"","what":"User guide","title":"Open Systems Pharmacology Parameter Identification package","text":"Examples running parameter estimation tasks using package detailed vignette('user-guide').","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Open Systems Pharmacology Parameter Identification package","text":"Everyone interacting Open Systems Pharmacology community (codebases, issue trackers, chat rooms, mailing lists etcâ€¦) expected follow Open Systems Pharmacology code conduct.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/index.html","id":"contribution","dir":"","previous_headings":"","what":"Contribution","title":"Open Systems Pharmacology Parameter Identification package","text":"encourage contribution Open Systems Pharmacology community. getting started please read contribution guidelines. contributing code, please familiar coding standards.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Open Systems Pharmacology Parameter Identification package","text":"{OSPSuite.ParameterIdentification} package released GPLv2 License. trademarks within document belong legitimate owners.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/AlgorithmOptions_BOBYQA.html","id":null,"dir":"Reference","previous_headings":"","what":"AlgorithmOptions_BOBYQA â€” AlgorithmOptions_BOBYQA","title":"AlgorithmOptions_BOBYQA â€” AlgorithmOptions_BOBYQA","text":"Default options BOBYQA algorithm. see nloptr::nl.opts() details.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/AlgorithmOptions_BOBYQA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AlgorithmOptions_BOBYQA â€” AlgorithmOptions_BOBYQA","text":"","code":"AlgorithmOptions_BOBYQA"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/AlgorithmOptions_BOBYQA.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"AlgorithmOptions_BOBYQA â€” AlgorithmOptions_BOBYQA","text":"object class list length 7.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/AlgorithmOptions_DEoptim.html","id":null,"dir":"Reference","previous_headings":"","what":"AlgorithmOptions_DEoptim â€” AlgorithmOptions_DEoptim","title":"AlgorithmOptions_DEoptim â€” AlgorithmOptions_DEoptim","text":"Default options DEoptim algorithm. see DEoptim::DEoptim.control() details.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/AlgorithmOptions_DEoptim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AlgorithmOptions_DEoptim â€” AlgorithmOptions_DEoptim","text":"","code":"AlgorithmOptions_DEoptim"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/AlgorithmOptions_DEoptim.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"AlgorithmOptions_DEoptim â€” AlgorithmOptions_DEoptim","text":"object class list length 21.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/AlgorithmOptions_HJKB.html","id":null,"dir":"Reference","previous_headings":"","what":"AlgorithmOptions_HJKB â€” AlgorithmOptions_HJKB","title":"AlgorithmOptions_HJKB â€” AlgorithmOptions_HJKB","text":"Default options HJKB algorithm. see dfoptim::hjkb() details.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/AlgorithmOptions_HJKB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AlgorithmOptions_HJKB â€” AlgorithmOptions_HJKB","text":"","code":"AlgorithmOptions_HJKB"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/AlgorithmOptions_HJKB.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"AlgorithmOptions_HJKB â€” AlgorithmOptions_HJKB","text":"object class list length 5.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/Algorithms.html","id":null,"dir":"Reference","previous_headings":"","what":"Algorithms\r\nList of optimization algorithms supported by optimization routines and, consequently,\r\nby the ParameterIdentification class â€” Algorithms","title":"Algorithms\r\nList of optimization algorithms supported by optimization routines and, consequently,\r\nby the ParameterIdentification class â€” Algorithms","text":"Algorithms List optimization algorithms supported optimization routines , consequently, ParameterIdentification class","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/Algorithms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Algorithms\r\nList of optimization algorithms supported by optimization routines and, consequently,\r\nby the ParameterIdentification class â€” Algorithms","text":"","code":"Algorithms"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/Algorithms.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Algorithms\r\nList of optimization algorithms supported by optimization routines and, consequently,\r\nby the ParameterIdentification class â€” Algorithms","text":"object class list length 3.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/calculateCostMetrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Cost Metrics for Model Evaluation â€” calculateCostMetrics","title":"Calculate Cost Metrics for Model Evaluation â€” calculateCostMetrics","text":"function calculates various cost metrics evaluate fit model comparing simulated data observed data. supports different methods weighting residuals.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/calculateCostMetrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Cost Metrics for Model Evaluation â€” calculateCostMetrics","text":"","code":"calculateCostMetrics(   df,   objectiveFunctionType = \"lsq\",   residualWeightingMethod = \"none\",   robustMethod = \"none\",   scaleVar = FALSE,   ... )"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/calculateCostMetrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Cost Metrics for Model Evaluation â€” calculateCostMetrics","text":"df dataframe containing combined data simulation observation. Supports dataframes created DataCombined object via DataCombined$toDataFrame(). dataframe must include columns \"dataType\", \"xValues\", \"yValues\", optionally \"yErrorValues\" residualWeightingMethod set \"error\". objectiveFunctionType string indicating objective function type calculating model cost. Options include \"lsq\" (least squares, default) \"m3\" handling censored data. residualWeightingMethod string indicating method weight residuals. Options include \"none\" (default), \"std\", \"mean\", \"error\". robustMethod string indicating robust method apply residuals. Options include \"none\" (default), \"huber\", \"bisquare\". scaleVar boolean indicating whether scale residuals number observations. Defaults FALSE. ... Additional arguments passed .calculateCensoredContribution, including 'scaling', 'linScaleCV', 'logScaleSD'.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/calculateCostMetrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Cost Metrics for Model Evaluation â€” calculateCostMetrics","text":"list containing following elements: modelCost: total cost calculated scaled sum squared residuals. minLogProbability: minimum log probability indicating model fit. costDetails: dataframe details cost calculations. residualDetails: dataframe calculated residuals weights. list class modelCost easy identification processing.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/calculateCostMetrics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Cost Metrics for Model Evaluation â€” calculateCostMetrics","text":"function calculates residuals simulated observed values, applies specified weighting method, computes cost metrics based scaled unscaled residuals.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/calculateCostMetrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Cost Metrics for Model Evaluation â€” calculateCostMetrics","text":"","code":"if (FALSE) {  # Assuming DataCombined is a valid ospsuite DataCombined object df <- DataCombined$toDataFrame()  # Calculate cost metrics costMetrics <- calculateCostMetrics(df, residualWeightingMethod = \"std\", scaleVar = TRUE)  # View model cost print(costMetrics$modelCost) }"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-applyLogTransformation.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Log Transformation to Data Frame â€” .applyLogTransformation","title":"Apply Log Transformation to Data Frame â€” .applyLogTransformation","text":"Transforms yValues lloq columns given data frame using log transformation. Currently, function supports obsVsPredDf data frames, must contain yDimension, yUnit, yValues, lloq columns.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-applyLogTransformation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Log Transformation to Data Frame â€” .applyLogTransformation","text":"","code":".applyLogTransformation(df)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-applyLogTransformation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Log Transformation to Data Frame â€” .applyLogTransformation","text":"df tbl_df representing observed vs predicted data frame (obsVsPredDf).","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-applyLogTransformation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Log Transformation to Data Frame â€” .applyLogTransformation","text":"transformed data frame log-transformed yValues lloq.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-applyLogTransformation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Log Transformation to Data Frame â€” .applyLogTransformation","text":"","code":"# Assuming df is a valid obsVsPredDf data frame if (FALSE) { transformedDf <- applyLogTransformation(df) }"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-calculateBisquareWeights.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Bisquare Weights for Residuals â€” .calculateBisquareWeights","title":"Calculate Bisquare Weights for Residuals â€” .calculateBisquareWeights","text":"function calculates Bisquare (Tukey's biweight) weights residuals, aggressively reducing outlier influence. Scales residuals using MAD cutoff c times MAD.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-calculateBisquareWeights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Bisquare Weights for Residuals â€” .calculateBisquareWeights","text":"","code":".calculateBisquareWeights(residuals, c = 4.685)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-calculateBisquareWeights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Bisquare Weights for Residuals â€” .calculateBisquareWeights","text":"residuals Numeric vector residuals. c Tuning parameter outlier exclusion. Default 4.685.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-calculateBisquareWeights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Bisquare Weights for Residuals â€” .calculateBisquareWeights","text":"Numeric vector Bisquare weights.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-calculateCensoredContribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Contribution of Censored Data â€” .calculateCensoredContribution","title":"Calculate Contribution of Censored Data â€” .calculateCensoredContribution","text":"function computes contribution censored data based lower limit quantification (LLOQ) observed values. supports linear logarithmic scaling methods calculate standard deviation (SD) used deriving censored probabilities contribution overall model cost.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-calculateCensoredContribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Contribution of Censored Data â€” .calculateCensoredContribution","text":"","code":".calculateCensoredContribution(   observed,   simulated,   scaling,   linScaleCV = NULL,   logScaleSD = NULL )"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-calculateCensoredContribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Contribution of Censored Data â€” .calculateCensoredContribution","text":"observed Data frame containing observed data, must include 'lloq', 'xValues', 'xUnit', 'xDimension', 'yValues' columns. simulated Data frame containing simulated data, must include 'xValues', 'xUnit', 'xDimension', 'yValues' columns. scaling Character string specifying scaling method; one predefined scaling options. linScaleCV Numeric, coefficient used calculate standard deviation linear scaling, applied 'lloq' values. logScaleSD Numeric, standard deviation logarithmic scaling, applied uniformly censored observations.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-calculateCensoredContribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Contribution of Censored Data â€” .calculateCensoredContribution","text":"Numeric value representing sum squared errors censored observations, contributing model's total cost.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-calculateCensoredContribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Contribution of Censored Data â€” .calculateCensoredContribution","text":"","code":"if (FALSE) { .calculateCensoredContribution(observedData, simulatedData, scaling = \"lin\", linScaleCV = 0.2) }"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-calculateHuberWeights.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Huber Weights for Residuals â€” .calculateHuberWeights","title":"Calculate Huber Weights for Residuals â€” .calculateHuberWeights","text":"function calculates Huber weights residuals, reducing influence outliers. Uses MAD scaling applies cutoff k times MAD.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-calculateHuberWeights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Huber Weights for Residuals â€” .calculateHuberWeights","text":"","code":".calculateHuberWeights(residuals, k = 1.345)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-calculateHuberWeights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Huber Weights for Residuals â€” .calculateHuberWeights","text":"residuals Numeric vector residuals. k Tuning parameter outlier cutoff. Default 1.345.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-calculateHuberWeights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Huber Weights for Residuals â€” .calculateHuberWeights","text":"Numeric vector Huber weights.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-createErrorCostStructure.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Infinite Cost Structure â€” .createErrorCostStructure","title":"Create Infinite Cost Structure â€” .createErrorCostStructure","text":"Generates cost structure infinite values, used cases simulation failure.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-createErrorCostStructure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Infinite Cost Structure â€” .createErrorCostStructure","text":"","code":".createErrorCostStructure(infinite = FALSE)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-createErrorCostStructure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Infinite Cost Structure â€” .createErrorCostStructure","text":"Returns list infinite values model, minlogp, var, residuals components.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-getSimulationContainer.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the simulation container of the entity â€” .getSimulationContainer","title":"Get the simulation container of the entity â€” .getSimulationContainer","text":"Get simulation container entity","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-getSimulationContainer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the simulation container of the entity â€” .getSimulationContainer","text":"","code":".getSimulationContainer(entity)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-getSimulationContainer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the simulation container of the entity â€” .getSimulationContainer","text":"entity Object type Entity","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-getSimulationContainer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the simulation container of the entity â€” .getSimulationContainer","text":"root container parent entity.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-handleSimulationFailure.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle Simulation Failure â€” .handleSimulationFailure","title":"Handle Simulation Failure â€” .handleSimulationFailure","text":"function checks NA simulation results returns infinite cost structure found.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-handleSimulationFailure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle Simulation Failure â€” .handleSimulationFailure","text":"","code":".handleSimulationFailure(simulationResults)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-handleSimulationFailure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle Simulation Failure â€” .handleSimulationFailure","text":"simulationResults list simulation results.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-handleSimulationFailure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle Simulation Failure â€” .handleSimulationFailure","text":"Returns infinite cost structure NA values found simulation results, NULL otherwise.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-isSameDimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Do all quantities have the same dimension? â€” .isSameDimension","title":"Do all quantities have the same dimension? â€” .isSameDimension","text":"quantities dimension?","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-isSameDimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do all quantities have the same dimension? â€” .isSameDimension","text":"","code":".isSameDimension(quantities)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-isSameDimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do all quantities have the same dimension? â€” .isSameDimension","text":"quantities Quantities dimensions compared","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-isSameDimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do all quantities have the same dimension? â€” .isSameDimension","text":"TRUE dimension quantities equal, otherwise FALSE","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-removeFormulaPaths.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove paths with formulas â€” .removeFormulaPaths","title":"Remove paths with formulas â€” .removeFormulaPaths","text":"Removes paths quantities defined explicit formula simulation","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-removeFormulaPaths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove paths with formulas â€” .removeFormulaPaths","text":"","code":".removeFormulaPaths(paths, simulation, stopIfNotFound = TRUE)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-removeFormulaPaths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove paths with formulas â€” .removeFormulaPaths","text":"paths List paths filtered simulation Simulation object containing quantities stopIfNotFound Boolean. TRUE (default), error thrown path found simulation.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-removeFormulaPaths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove paths with formulas â€” .removeFormulaPaths","text":"List quantity paths defined explicit formula.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-restoreSimulationState.html","id":null,"dir":"Reference","previous_headings":"","what":"Restore simulation output state â€” .restoreSimulationState","title":"Restore simulation output state â€” .restoreSimulationState","text":"Restore simulation output state","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-restoreSimulationState.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restore simulation output state â€” .restoreSimulationState","text":"","code":".restoreSimulationState(simulations, simStateList)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-restoreSimulationState.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restore simulation output state â€” .restoreSimulationState","text":"simulations List Simulation objects simStateList Output function .storeSimulationState. named list entries outputIntervals, timePoints, outputSelections. Every entry named list names IDs simulations.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-storeSimulationState.html","id":null,"dir":"Reference","previous_headings":"","what":"Stores current simulation output state â€” .storeSimulationState","title":"Stores current simulation output state â€” .storeSimulationState","text":"Stores simulation output intervals, output time points, output selections current state.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-storeSimulationState.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stores current simulation output state â€” .storeSimulationState","text":"","code":".storeSimulationState(simulations)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-storeSimulationState.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stores current simulation output state â€” .storeSimulationState","text":"simulations List Simulation objects","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-storeSimulationState.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stores current simulation output state â€” .storeSimulationState","text":"named list entries outputIntervals, timePoints, outputSelections. Every entry named list names IDs simulations.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-summarizeCostLists.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize Cost Lists â€” .summarizeCostLists","title":"Summarize Cost Lists â€” .summarizeCostLists","text":"function takes two lists, output calculateCostMetrics function, summarizes . aggregates model costs min log probabilities, combines cost residual details row-binding.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-summarizeCostLists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize Cost Lists â€” .summarizeCostLists","text":"","code":".summarizeCostLists(list1, list2)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-summarizeCostLists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize Cost Lists â€” .summarizeCostLists","text":"list1 first list, containing output calculateCostMetrics function, includes modelCost, minLogProbability, costDetails, residualDetails. list2 second list, containing output calculateCostMetrics function, includes modelCost, minLogProbability, costDetails, residualDetails.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-summarizeCostLists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize Cost Lists â€” .summarizeCostLists","text":"Returns list includes sum modelCosts, sum minLogProbabilities, row-bound combination costDetails, row-bound combination residualDetails.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-validateIsSameDimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the dimensions of the quantities are equal. â€” .validateIsSameDimension","title":"Check if the dimensions of the quantities are equal. â€” .validateIsSameDimension","text":"Check dimensions quantities equal.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-validateIsSameDimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the dimensions of the quantities are equal. â€” .validateIsSameDimension","text":"","code":".validateIsSameDimension(quantities)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/dot-validateIsSameDimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the dimensions of the quantities are equal. â€” .validateIsSameDimension","text":"quantities Quantities dimensions compared","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/getOSPSuitePISetting.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the value of a global ospsuite.parameteridentification setting. â€” getOSPSuitePISetting","title":"Get the value of a global ospsuite.parameteridentification setting. â€” getOSPSuitePISetting","text":"Get value global ospsuite.parameteridentification setting.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/getOSPSuitePISetting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the value of a global ospsuite.parameteridentification setting. â€” getOSPSuitePISetting","text":"","code":"getOSPSuitePISetting(settingName)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/getOSPSuitePISetting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the value of a global ospsuite.parameteridentification setting. â€” getOSPSuitePISetting","text":"settingName String name setting","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/getOSPSuitePISetting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the value of a global ospsuite.parameteridentification setting. â€” getOSPSuitePISetting","text":"Value setting stored piEnv. setting exist, error thrown.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/getOSPSuitePISetting.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the value of a global ospsuite.parameteridentification setting. â€” getOSPSuitePISetting","text":"","code":"getOSPSuitePISetting(\"packageVersion\") #>      version  #> \"1.3.0.9000\""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/getSteadyState.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the steady-state values of species and state variable parameters. â€” getSteadyState","title":"Get the steady-state values of species and state variable parameters. â€” getSteadyState","text":"Get steady-state values species state variable parameters.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/getSteadyState.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the steady-state values of species and state variable parameters. â€” getSteadyState","text":"","code":"getSteadyState(   quantitiesPaths = NULL,   simulations,   steadyStateTime,   ignoreIfFormula = TRUE,   stopIfNotFound = TRUE,   lowerThreshold = 1e-15,   simulationRunOptions = NULL )"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/getSteadyState.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the steady-state values of species and state variable parameters. â€” getSteadyState","text":"quantitiesPaths List quantity paths (molecules /parameters) steady-state simulated. NULL (default), molecules state variable parameters considered. list applied simulations. simulations Simulation object list Simulation objects steadyStateTime Simulation time (minutes). Must long enough system reach steady-state. 1000 default. Either single value (applied simulations), vector values specific simulation. latter case, must equal size simulations. ignoreIfFormula TRUE (default), species parameters initial values defined formula included. stopIfNotFound Boolean. TRUE (default), error thrown results certain species generated. may happen due numerical problems values calculated, though whole simulation converges. Setting argument FALSE allows ignore errors. Check outputs empty values using option. lowerThreshold Numerical value (default unit output). steady-state values value considered numerical noise replaced 0. lowerThreshold NULL, cut-applied. Default value 1e-15. simulationRunOptions Optional instance SimulationRunOptions used simulation run.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/getSteadyState.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the steady-state values of species and state variable parameters. â€” getSteadyState","text":"named list, names IDs simulations entries lists containing paths values end simulation.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/getSteadyState.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the steady-state values of species and state variable parameters. â€” getSteadyState","text":"steady-state considered last value simulation sufficiently long simulation time, .e., rates processes (significantly) change.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ObjectiveFunctionOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"ObjectiveFunctions\r\nList of supported objective functions to calculate the error. â€” ObjectiveFunctionOptions","title":"ObjectiveFunctions\r\nList of supported objective functions to calculate the error. â€” ObjectiveFunctionOptions","text":"ObjectiveFunctions List supported objective functions calculate error.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ObjectiveFunctionOptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ObjectiveFunctions\r\nList of supported objective functions to calculate the error. â€” ObjectiveFunctionOptions","text":"","code":"ObjectiveFunctionOptions"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ObjectiveFunctionOptions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ObjectiveFunctions\r\nList of supported objective functions to calculate the error. â€” ObjectiveFunctionOptions","text":"object class list length 7.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ospsuitePIRSettingNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Names of the settings stored in piEnv Can be used with getOSPSuitePISetting() â€” ospsuitePIRSettingNames","title":"Names of the settings stored in piEnv Can be used with getOSPSuitePISetting() â€” ospsuitePIRSettingNames","text":"Names settings stored piEnv Can used getOSPSuitePISetting()","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ospsuitePIRSettingNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Names of the settings stored in piEnv Can be used with getOSPSuitePISetting() â€” ospsuitePIRSettingNames","text":"","code":"ospsuitePIRSettingNames"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ospsuitePIRSettingNames.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Names of the settings stored in piEnv Can be used with getOSPSuitePISetting() â€” ospsuitePIRSettingNames","text":"object class list length 2.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":null,"dir":"Reference","previous_headings":"","what":"ParameterIdentification â€” ParameterIdentification","title":"ParameterIdentification â€” ParameterIdentification","text":"task identify optimal parameter values based simulation outputs observed data","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ParameterIdentification â€” ParameterIdentification","text":"new ParameterIdentification object. list ggplot2 objects, one plot per PIOutputMapping","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"ParameterIdentification â€” ParameterIdentification","text":"ospsuite.utils::Printable -> ParameterIdentification","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"ParameterIdentification â€” ParameterIdentification","text":"simulations Named list simulation objects, names IDs root container simulation parameters List PIParameters objects optimized. Read-configuration object PIConfiguration outputMappings List PIOutputMapping objects. mapping assigns set observed data simulation output Evaluate simulations given parameter values","code":""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"ParameterIdentification â€” ParameterIdentification","text":"ParameterIdentification$new() ParameterIdentification$run() ParameterIdentification$plotResults() ParameterIdentification$print()","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"ParameterIdentification â€” ParameterIdentification","text":"Initialize new instance class","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ParameterIdentification â€” ParameterIdentification","text":"","code":"ParameterIdentification$new(   simulations,   parameters,   outputMappings,   configuration = NULL )"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ParameterIdentification â€” ParameterIdentification","text":"simulations object list objects class Simulation. Parameters simulation object varied results simulated parameters object list objects class PIParameter. parameters varied. outputMappings List objects class PIOutputMapping. objects maps model output (represented Quantity) set observed data given XYData objects. used. configuration Optional. Object type PIConfiguration defining options parameter identification. PIConfiguration passed, default one currVals Numerical vector parameter values applied","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"ParameterIdentification â€” ParameterIdentification","text":"list objects DataCombined class includes values simulated given parameters, corresponding datasets observed data. Returns one DataCombined object output mapping.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"method-run-","dir":"Reference","previous_headings":"","what":"Method run()","title":"ParameterIdentification â€” ParameterIdentification","text":"Start identification parameters","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"ParameterIdentification â€” ParameterIdentification","text":"","code":"ParameterIdentification$run()"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ParameterIdentification â€” ParameterIdentification","text":"identification finished, best identified values parameters accessible via currValue-field PIParameters-object.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"ParameterIdentification â€” ParameterIdentification","text":"Output PI algorithm. Depends selected algorithm.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"method-plotresults-","dir":"Reference","previous_headings":"","what":"Method plotResults()","title":"ParameterIdentification â€” ParameterIdentification","text":"Plot results parameter estimation","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"ParameterIdentification â€” ParameterIdentification","text":"","code":"ParameterIdentification$plotResults(par = NULL)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"ParameterIdentification â€” ParameterIdentification","text":"par Values paramterers applied simulations. NULL (default), current parameter values applied. custom values supplied, must order ParameterIdentification$parameters","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"ParameterIdentification â€” ParameterIdentification","text":"Runs simulations current (default) supplied parameter values creates plots every output mapping","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"ParameterIdentification â€” ParameterIdentification","text":"Print object console","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"ParameterIdentification â€” ParameterIdentification","text":"","code":"ParameterIdentification$print(...)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ParameterIdentification.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"ParameterIdentification â€” ParameterIdentification","text":"... Rest arguments.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIConfiguration.html","id":null,"dir":"Reference","previous_headings":"","what":"PIConfiguration â€” PIConfiguration","title":"PIConfiguration â€” PIConfiguration","text":"object storing configuration parameter identification","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIConfiguration.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PIConfiguration â€” PIConfiguration","text":"ospsuite.utils::Printable -> PIConfiguration","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIConfiguration.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"PIConfiguration â€” PIConfiguration","text":"printEvaluationFeedback Boolean. TRUE, prints objective function value evaluation. Default FALSE simulationRunOptions Object SimulationRunOptions simulation runs. NULL, default options used. objectiveFunctionOptions Configures model fit assessment options. setting influences error model fit calculated Supported options allowable values detailed ospsuite.parameteridentification::ObjectiveFunctionOptions. algorithm string describing optimization algorithm. Supported algorithms listed  ospsuite.parameteridentification::Algorithms. algorithmOptions list named parameters describing algorithm-specific options. Default options listed  AlgorithmOptions_XYZ XYZ name algorithm. NULL, default options used.","code":""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIConfiguration.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PIConfiguration â€” PIConfiguration","text":"PIConfiguration$new() PIConfiguration$print() PIConfiguration$clone()","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIConfiguration.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PIConfiguration â€” PIConfiguration","text":"Initialize new instance class","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIConfiguration.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PIConfiguration â€” PIConfiguration","text":"","code":"PIConfiguration$new()"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIConfiguration.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"PIConfiguration â€” PIConfiguration","text":"new PIConfiguration object. Print","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIConfiguration.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"PIConfiguration â€” PIConfiguration","text":"prints summary PIConfiguration.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIConfiguration.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PIConfiguration â€” PIConfiguration","text":"","code":"PIConfiguration$print()"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIConfiguration.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PIConfiguration â€” PIConfiguration","text":"objects class cloneable method.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIConfiguration.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PIConfiguration â€” PIConfiguration","text":"","code":"PIConfiguration$clone(deep = FALSE)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIConfiguration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PIConfiguration â€” PIConfiguration","text":"deep Whether make deep clone.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":null,"dir":"Reference","previous_headings":"","what":"PIOutputMapping â€” PIOutputMapping","title":"PIOutputMapping â€” PIOutputMapping","text":"object links together quantities simulation observed data. object passed ParameterIdentification objects","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PIOutputMapping â€” PIOutputMapping","text":"ospsuite.utils::Printable -> PIOutputMapping","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"PIOutputMapping â€” PIOutputMapping","text":"observedDataSets Named list DataSet objects compared simulation results. dataTransformations named list factors offsets quantity Simulation quantities values matched observed data scaling Linear (default) logarithmic scaling output mapping transformResultsFunction Function applied simulated results. Allows manipulate simulated values calculating residuals. function manipulate numeric vectors 'xVals' 'yVals' (simulated time- observation values) assigned x- y-values simulated result. function must return named list key 'xVals' 'yVals'.","code":""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PIOutputMapping â€” PIOutputMapping","text":"PIOutputMapping$new() PIOutputMapping$addObservedDataSets() PIOutputMapping$removeObservedDataSet() PIOutputMapping$setDataTransformations() PIOutputMapping$print() PIOutputMapping$clone()","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PIOutputMapping â€” PIOutputMapping","text":"Initialize new instance class","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PIOutputMapping â€” PIOutputMapping","text":"","code":"PIOutputMapping$new(quantity)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PIOutputMapping â€” PIOutputMapping","text":"quantity object type Quantity","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"PIOutputMapping â€” PIOutputMapping","text":"new PIOutputMapping object. Add observed data DataSet objects","code":""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PIOutputMapping â€” PIOutputMapping","text":"","code":"PIOutputMapping$addObservedDataSets(data)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PIOutputMapping â€” PIOutputMapping","text":"data Object list objects type DataSet. data set must dimension simulation quantity mapping.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PIOutputMapping â€” PIOutputMapping","text":"observed data object label already exists, overwritten.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"method-removeobserveddataset-","dir":"Reference","previous_headings":"","what":"Method removeObservedDataSet()","title":"PIOutputMapping â€” PIOutputMapping","text":"Remove observed data.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PIOutputMapping â€” PIOutputMapping","text":"","code":"PIOutputMapping$removeObservedDataSet(label)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"PIOutputMapping â€” PIOutputMapping","text":"label label x-y values series removed","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"method-setdatatransformations-","dir":"Reference","previous_headings":"","what":"Method setDataTransformations()","title":"PIOutputMapping â€” PIOutputMapping","text":"Set data transformations","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"PIOutputMapping â€” PIOutputMapping","text":"","code":"PIOutputMapping$setDataTransformations(   labels = NULL,   xOffsets = 0,   yOffsets = 0,   xFactors = 1,   yFactors = 1 )"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"PIOutputMapping â€” PIOutputMapping","text":"labels list labels, corresponding one datasets. labels specified, data transformations set across datasets xOffsets numeric list value X-offsets yOffsets numeric list value Y-offsets xFactors numeric list value X-factors yFactors numeric list value Y-factors","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"PIOutputMapping â€” PIOutputMapping","text":"Print object console","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"PIOutputMapping â€” PIOutputMapping","text":"","code":"PIOutputMapping$print(...)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"PIOutputMapping â€” PIOutputMapping","text":"... Rest arguments.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PIOutputMapping â€” PIOutputMapping","text":"objects class cloneable method.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"PIOutputMapping â€” PIOutputMapping","text":"","code":"PIOutputMapping$clone(deep = FALSE)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIOutputMapping.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"PIOutputMapping â€” PIOutputMapping","text":"deep Whether make deep clone.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":null,"dir":"Reference","previous_headings":"","what":"PIParameters â€” PIParameters","title":"PIParameters â€” PIParameters","text":"parameter optimized parameter identification routine","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"PIParameters â€” PIParameters","text":"ospsuite.utils::Printable -> PIParameters","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"PIParameters â€” PIParameters","text":"parameters List parameter object. Adding removing parameters supported. currValue Current value parameters used simulation. unit value PIParameters$unit. startValue Start value optimization. minValue Minimal allowed value parameter. maxValue Maximal allowed value parameter. unit Unit parameter values. unit changed, min/max/start values adjusted automatically.","code":""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"PIParameters â€” PIParameters","text":"PIParameters$new() PIParameters$setValue() PIParameters$print() PIParameters$clone()","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"PIParameters â€” PIParameters","text":"Initialize new instance class start value set value first parameter time creation can changed PIParameters$startValue","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PIParameters â€” PIParameters","text":"","code":"PIParameters$new(parameters)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PIParameters â€” PIParameters","text":"parameters list objects class Parameter. parameters optimized using value.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"PIParameters â€” PIParameters","text":"new PIParameters object.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"method-setvalue-","dir":"Reference","previous_headings":"","what":"Method setValue()","title":"PIParameters â€” PIParameters","text":"Change value parameter(s) unit value $unit","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"PIParameters â€” PIParameters","text":"","code":"PIParameters$setValue(value)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"PIParameters â€” PIParameters","text":"value Numerical value.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"PIParameters â€” PIParameters","text":"Print object console","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"PIParameters â€” PIParameters","text":"","code":"PIParameters$print(...)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"PIParameters â€” PIParameters","text":"... Rest arguments.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"PIParameters â€” PIParameters","text":"objects class cloneable method.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"PIParameters â€” PIParameters","text":"","code":"PIParameters$clone(deep = FALSE)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/PIParameters.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"PIParameters â€” PIParameters","text":"deep Whether make deep clone.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/plot.modelCost.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Model Cost Residuals â€” plot.modelCost","title":"Plot Model Cost Residuals â€” plot.modelCost","text":"Plots raw residuals , different, weighted robust weighted residuals modelCost object.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/plot.modelCost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Model Cost Residuals â€” plot.modelCost","text":"","code":"# S3 method for modelCost plot(x, legpos = \"topright\", ...)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/plot.modelCost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Model Cost Residuals â€” plot.modelCost","text":"x modelCost object containing residuals plot. legpos Position legend; default \"topright\". Use NA omit legend. ... Additional arguments passed plot function.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/plot.modelCost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Model Cost Residuals â€” plot.modelCost","text":"Generates plot.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/plot.modelCost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Model Cost Residuals â€” plot.modelCost","text":"","code":"# Assuming modelCostObj is a valid `modelCost` object if (FALSE) { plot.modelCost(modelCostObj) }"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/residualWeightingOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"residualWeightingOptions\r\nList of residual weighting methods used in the cost function. â€” residualWeightingOptions","title":"residualWeightingOptions\r\nList of residual weighting methods used in the cost function. â€” residualWeightingOptions","text":"residualWeightingOptions List residual weighting methods used cost function.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/residualWeightingOptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"residualWeightingOptions\r\nList of residual weighting methods used in the cost function. â€” residualWeightingOptions","text":"","code":"residualWeightingOptions"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/residualWeightingOptions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"residualWeightingOptions\r\nList of residual weighting methods used in the cost function. â€” residualWeightingOptions","text":"object class list length 4.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/robustMethodOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"robustMethodOptions\r\nList of robust weighting methods used in the cost function for handling outliers. â€” robustMethodOptions","title":"robustMethodOptions\r\nList of robust weighting methods used in the cost function for handling outliers. â€” robustMethodOptions","text":"robustMethodOptions List robust weighting methods used cost function handling outliers.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/robustMethodOptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"robustMethodOptions\r\nList of robust weighting methods used in the cost function for handling outliers. â€” robustMethodOptions","text":"","code":"robustMethodOptions"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/robustMethodOptions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"robustMethodOptions\r\nList of robust weighting methods used in the cost function for handling outliers. â€” robustMethodOptions","text":"object class list length 3.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ScalingOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"ScalingOptions\r\nList of scaling options for output mappings. â€” ScalingOptions","title":"ScalingOptions\r\nList of scaling options for output mappings. â€” ScalingOptions","text":"ScalingOptions List scaling options output mappings.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ScalingOptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ScalingOptions\r\nList of scaling options for output mappings. â€” ScalingOptions","text":"","code":"ScalingOptions"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/ScalingOptions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ScalingOptions\r\nList of scaling options for output mappings. â€” ScalingOptions","text":"object class list length 2.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/validateIsOption.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Input Options Against Valid Options â€” validateIsOption","title":"Validate Input Options Against Valid Options â€” validateIsOption","text":"function checks provided input options valid based list valid options. ensures option inputOptions matches allowed types values specified validOptions. options expecting numeric values, checks fall within specified range. boolean options, checks strictly TRUE FALSE.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/validateIsOption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Input Options Against Valid Options â€” validateIsOption","text":"","code":"validateIsOption(inputOptions, validOptions)"},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/validateIsOption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Input Options Against Valid Options â€” validateIsOption","text":"inputOptions list options validate. option's value checked corresponding entry validOptions. validOptions list specifies valid values value types option. can include specific values, types, ranges numeric options.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/validateIsOption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Input Options Against Valid Options â€” validateIsOption","text":"input options valid, function returns NULL. input option invalid, function stops signals error message detailing validation failures.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/reference/validateIsOption.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate Input Options Against Valid Options â€” validateIsOption","text":"","code":"validOptions <- list(   algorithmType = c(\"gradient\", \"newton\"),   enableLogging = c(TRUE, FALSE),   convergenceThreshold = list(type = \"numeric\", min = 1e-5, max = 0.1) )  inputOptions <- list(   algorithmType = \"gradient\",   enableLogging = TRUE,   convergenceThreshold = 0.005 ) validateIsOption(inputOptions, validOptions) #> NULL"},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/news/index.html","id":"ospsuite-parameteridentification-13","dir":"Changelog","previous_headings":"","what":"ospsuite-parameteridentification 1.3","title":"ospsuite-parameteridentification 1.3","text":"Added new optimization algorithms: default local algorithm now implementation BOBYQA algorithm (bounded optimization quadratic approximation) nloptr package; additional local algorithm HJKB, bounded implementation Hooke-Jeeves derivative-free algorithm {dfoptim} package; global algorithm DEoptim differential evolution optimization. FME::modCost() re-implemented part parameter identification package used calculation residuals.","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/news/index.html","id":"breaking-changes-1-3","dir":"Changelog","previous_headings":"","what":"BREAKING CHANGES","title":"ospsuite-parameteridentification 1.3","text":"parameter PIConfiguration class controlling feedback function evaluation now called printEvaluationFeedback instead printIterationFeedback","code":""},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/news/index.html","id":"bug-fixes-1-3","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"ospsuite-parameteridentification 1.3","text":"Calculation residals fail observed data contains one time point. Calculation hessian close bounds parameter values improved","code":""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/news/index.html","id":"breaking-changes-1-2","dir":"Changelog","previous_headings":"","what":"BREAKING CHANGES","title":"ospsuite-parameteridentification 1.2","text":"requires ospsuite v11.1 later","code":""},{"path":[]},{"path":"https://www.open-systems-pharmacology.org/OSPSuite.ParameterIdentification/dev/news/index.html","id":"minor-changes-1-2","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"ospsuite-parameteridentification 1.2","text":"getSteadyState() accepts steady state time invidiaul simulation.","code":""}]
